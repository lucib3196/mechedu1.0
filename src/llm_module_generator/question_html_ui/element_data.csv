table_string,links,description,element_name,question_data,short_description
,{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/calculation'},"<p>Displays the contents of question directions.</p>

<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-question-panel&gt;This content is only shown in the question panel.&lt;/pl-question-panel&gt;</code>
</pre>

<p>Generally, the contents of <code>question.html</code> will appear in
the question panel, submission panel, and answer panel. To prevent
content from being displayed in the submission panel and
answer panel (so, only in the question panel), surround that content
with the <code>&lt;pl-question-panel&gt;</code> tags.</p>

",pl-question-panel,"[{'question_html': '<pl-question-panel>\n  <p> Consider two numbers $a = {{params.a}}$ and $b = {{params.b}}$.</p>\n  <p> What is the sum $c = a + b$?</p>\n</pl-question-panel>\n\n<pl-integer-input answers-name=""c"" label=""$c=$""></pl-integer-input>\n', 'server_file': 'import random\n\n\ndef generate(data):\n    # Sample two random integers between 5 and 10 (inclusive)\n    a = random.randint(5, 10)\n    b = random.randint(5, 10)\n\n    # Put these two integers into data[\'params\']\n    data[""params""][""a""] = a\n    data[""params""][""b""] = b\n\n    # Compute the sum of these two integers\n    c = a + b\n\n    # Put the sum into data[\'correct_answers\']\n    data[""correct_answers""][""c""] = c\n'}]","
description:

The `<pl-question-panel>` tag is specifically designed to encapsulate content that should only be displayed within the question panel of an online quiz or assessment interface. Its primary purpose is to limit the visibility of certain instructions, additional context, or directions to the question panel only, ensuring that such information is not repeated in the submission panel or answer panel. This is particularly useful in educational settings where clear guidance is necessary for answering questions without providing hints or answers after the questionnaire has been submitted. It keeps the user interface clean and focused on the task of answering the questions.

use_cases:
- To provide specific instructions or guidelines that the student needs to focus on while attempting the question, but which should not be visible after the submission is made.
- To display additional context or background information relevant to the question, ensuring that it only aids with understanding during the answering phase and disappears afterwards to prevent any potential bias or influence in grading.
- To offer hints or clarifications that should guide the students while they are engaged with the question, but should not be accessible or lingering when they review their answers or submit the quiz.

example_questions:
- What are the main themes discussed in the text? Please summarize in your own words.
- Explain the significance of the results obtained in the experiment. What do they suggest about the hypothesis?
- List the steps you would take to solve the following problem, making sure to clearly outline your reasoning.
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | — | Variable name to store data in. Note that this attribute has to be unique within a question, i.e., no value for this attribute should be repeated within a question.
 | integer | 1 | Weight to use when computing a weighted average score over elements.
 | float | special | Correct answer for grading. Defaults to
 | text | — | A prefix to display before the input box (e.g.,
 | text | — | A suffix to display after the input box (e.g.,
 | ""block"" or ""inline"" | ""inline"" | How to display the input field.
 | ""relabs"", ""sigfig"", or ""decdig"" | ""relabs"" | How to grade. ""relabs"" uses relative (""rtol"") and absolute (""atol"") tolerances. ""sigfig"" and ""decdig"" use ""digits"" significant or decimal digits.
 | number | 1e-2 | Relative tolerance for
 | number | 1e-8 | Absolute tolerance for
 | integer | 2 | number of digits that must be correct for
 | boolean | false | Whether or not to allow complex numbers as answers. If the correct answer
 | boolean | false | Whether or not an empty input box is allowed. By default, empty input boxes will not be graded (invalid format).
 | boolean | true | Whether to show the score badge next to this element.
 | string | 0 (zero) | Value to be used as an answer if element is left blank. Only applied if
 | boolean | true | Show the question mark at the end of the input displaying required input parameters.
 | string | - | Custom placeholder text. By default, the placeholder text shown is the default comparison. comparison.
 | integer | 35 | Size of the input box.
 | boolean | true | Whether to show the correct answer in the submitted answers panel.
 | boolean | true | Whether to allow answers expressed as a rational number of the format
 | string | special | Custom format to use when formatting the submitted or correct answer. By default, submitted answers are shown with the format
","{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/element/numberInput', 'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/calculation'}","<p>Fill in the blank field that allows for <strong>numeric</strong> value input within specific
tolerances.</p>

<p>
  <img alt="""" src=""pl-number-input-rtol.png""/>
</p>

<p>
  <strong>question.html</strong>
</p>

<strong>question.html</strong>
<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-number-input answers-name=""ans_rtol"" label=""$x =$""&gt; &lt;/pl-number-input&gt;</code>
</pre>

<p>
  <strong>server.py</strong>
</p>

<strong>server.py</strong>
<pre class=""highlight"">
  <code class=""language-python"">import random

def generate(data):

    # Generate a random value
    x = random.uniform(1, 2)

    # Answer to fill in the blank input
    data[""correct_answers""][""ans_rtol""] = x</code>
</pre>

<hr/>

<p>
  <img alt="""" src=""pl-number-input-sigfig.png""/>
</p>

<p>
  <strong>question.html</strong>
</p>

<strong>question.html</strong>
<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-number-input answers-name=""ans_sig"" comparison=""sigfig"" digits=""2"" label=""$x =$""&gt;
&lt;/pl-number-input&gt;</code>
</pre>

<p>
  <strong>server.py</strong>
</p>

<strong>server.py</strong>
<pre class=""highlight"">
  <code class=""language-python"">import random

def generate(data):

    # Generate a random value
    x = random.uniform(1, 2)

    # Answer to fill in the blank input
    data[""correct_answers""][""ans_sig""] = round(x, 2)</code>
</pre>

",pl-number-input,"[{'question_html': '<pl-question-panel>\n  <p>\n    Questions below were designed to showcase the different features of\n    <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-number-input-element""><code>pl-number-input</code></a>.\n    The goal of <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-number-input-element""><code>pl-number-input</code></a>\n    is to allow users to enter <b>real or complex values</b> to be checked within a specific tolerance.  The correct value of $c$ in all questions below is <samp>{{correct_answers.c_1}}</samp>.\n  </p>\n</pl-question-panel>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>Within this question, you can observe the default behavior of the <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-number-input-element""><code>pl-number-input</code></a> element.\n        In particular, the default input field has help text as a placeholder as well as a question button and is set to use <code>""relabs""</code> to check the tolerance, which is a combination of relative (<code>""rtol""</code>) and absolute (<code>""atol""</code>) tolerances.</p>\n      <p> Solve for the value of $c$ given $c^2 = {{params.a}}^2 + {{params.b}}^2$ </p>\n    </pl-question-panel>\n    <pl-number-input answers-name=""c_1""></pl-number-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>This question modifies the default relative tolerance (of <code>1e-3</code>) and absolute tolerance (of <code>1e-8</code>) underneath <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-number-input-element""><code>pl-number-input</code></a> element. Furthermore, we add a label to the front of the input field to specify what the field should receive. </p>\n      <p> Solve for the value of $c$ given $c^2 = {{params.a}}^2 + {{params.b}}^2$ </p>\n    </pl-question-panel>\n    <pl-number-input answers-name=""c_2"" label=""$c = $"" rtol=""1e-3"" atol=""1e-10""></pl-number-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>Under this variant, we opt to change the default comparison of <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-number-input-element""><code>pl-number-input</code></a>  from relative and absolute tolerances (<code>comparison=""relabs""</code>) to significant digits (<code>comparison=""sigfig""</code>), which has a default of two digits. In addition, we\'ve opted to add a suffix or a unit classification to the input via <code>suffix=""units""</code>. </p>\n      <p> Solve for the value of $c$ given $c^2 = {{params.a}}^2 + {{params.b}}^2$ </p>\n    </pl-question-panel>\n    <pl-number-input answers-name=""c_3"" label=""$c = $"" comparison=""sigfig"" suffix=""units""></pl-number-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>Another option is to set the comparison for <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-number-input-element""><code>pl-number-input</code></a> to decimal digits (<code>""decdig""</code>) with a requirement for four digits (<code>digits=""4""</code>). Furthermore, we changed the weight of this question to be more impactful vs the previous entries via <code>weight=""2""</code>. Lastly, we allow students to enter complex numbers by setting <code>allow-complex=""true""</code>. </p>\n      <p> Solve for the value of $c$ given $c^2 = {{params.a}}^2 + {{params.b}}^2$ </p>\n    </pl-question-panel>\n    <pl-number-input answers-name=""c_4"" label=""$c = $"" comparison=""decdig"" digits=""4"" weight=""2"" allow-complex=""true"" suffix=""units""></pl-number-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>As another example, we remove the help popup box found in <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-number-input-element""><code>pl-number-input</code></a> by setting <code>show-help-text=""false""</code>.</p>\n      <p> Solve for the value of $c$ given $c^2 = {{params.a}}^2 + {{params.b}}^2$ </p>\n    </pl-question-panel>\n    <pl-number-input answers-name=""c_5"" label=""$c = $"" show-help-text=""false"" suffix=""units""></pl-number-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>This example shows the use of the attribute <code>size</code> to control the width of the input box. Enter below the coefficients\n        for a function $y = a x + b$ that has a slope equal to $2$ and intercepts the $y$-axis at $5$. Here\n        we also use <code>placeholder=""""</code> for both input boxes and <code>show-help-text=""false""</code>\n        for the first input box.</p>\n    </pl-question-panel>\n    $f = $<pl-number-input answers-name=""c_m"" placeholder="""" show-help-text=""false"" size=""10""></pl-number-input> $ x \\, +$\n    <pl-number-input answers-name=""c_b"" placeholder="""" size=""10""></pl-number-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>This example allows the user to provide a blank value as a valid response. It uses the  <code>allow-blank=""true""</code> option.</p>\n      <p>One of the roots of $c^2 = 0$ is $c=0$. Is there another root? Keep blank if there is no other root.</p>\n    </pl-question-panel>\n    <pl-number-input answers-name=""c_6"" label=""$c = $"" allow-blank=""true"" blank-value=""0"" correct-answer=""0""></pl-number-input>\n  </div>\n</div>\n\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        This question modifies the default format used to print the correct answer and submitted answer.\n        This option can be used, for example, to set the number of decimal places, force (or avoid)\n        scientific notation, or to include a sign in the result. We also set\n        <code>show-score=""False""</code> to hide the score badge.\n      </p>\n      <p> Solve for the value of $c$ given $c^2 = {{params.a}}^2 + {{params.b}}^2$ </p>\n    </pl-question-panel>\n    <pl-number-input answers-name=""c_7"" custom-format=""+.5f"" show-score=""false""></pl-number-input>\n  </div>\n</div>\n', 'server_file': 'import math\nimport random\n\n\ndef generate(data):\n    # Simulate values\n    a = random.randint(2, 10)\n    b = random.randint(2, 10)\n\n    # Compute answer\n    c = math.sqrt(a**2 + b**2)\n\n    # Release parameters\n    data[""params""][""a""] = a\n    data[""params""][""b""] = b\n\n    # Release correct answer\n    data[""correct_answers""][""c_1""] = c\n    data[""correct_answers""][""c_2""] = c\n    data[""correct_answers""][""c_3""] = c\n    data[""correct_answers""][""c_4""] = c\n    data[""correct_answers""][""c_5""] = c\n    data[""correct_answers""][""c_m""] = 2\n    data[""correct_answers""][""c_b""] = 5\n    data[""correct_answers""][""c_7""] = c\n'}, {'question_html': '<pl-question-panel>\n  <p> Consider two numbers $a = {{params.a}}$ and $b = {{params.b}}$.</p>\n  <p> What is the sum $c = a + b$?</p>\n</pl-question-panel>\n\n<pl-integer-input answers-name=""c"" label=""$c=$""></pl-integer-input>\n', 'server_file': 'import random\n\n\ndef generate(data):\n    # Sample two random integers between 5 and 10 (inclusive)\n    a = random.randint(5, 10)\n    b = random.randint(5, 10)\n\n    # Put these two integers into data[\'params\']\n    data[""params""][""a""] = a\n    data[""params""][""b""] = b\n\n    # Compute the sum of these two integers\n    c = a + b\n\n    # Put the sum into data[\'correct_answers\']\n    data[""correct_answers""][""c""] = c\n'}]","
description:

The <pl-number-input> custom HTML tag is designed for interactive online quizzes and assessments where students need to input numeric answers under specific tolerances. This tag facilitates input fields that can validate numeric values and ensures that students provide answers that meet defined criteria, such as relative or absolute tolerances, significant figures, and custom formatting. This makes it especially useful in educational contexts, particularly in mathematics and sciences, where precision in numeric input is crucial. The tag includes a variety of attributes that allow educators to customize grading criteria and feedback, adapting to diverse assessment needs.

use_cases:
- Mathematics quizzes where students must enter exact answers to calculations, ensuring the values are within acceptable tolerances for correctness.
- Science assessments where students need to report measurements or numerical values resulting from experiments, quantified to a specified number of significant figures or relative tolerances.
- Online exams requiring students to solve equations and submit numeric answers, providing instant feedback on the correctness of their inputs and allowing for detailed grading based on common numerical error tolerances.

example_questions:
- What value of x satisfies the equation $x^2 - 4 = 0$? (Please provide your answer rounded to 2 decimal places using the <pl-number-input> tag).
- If a solution to the equation $2x + 3 = 9$ is $x = ?$, enter your answer with appropriate significant figures using the <pl-number-input> tag.
- A car travels a distance of 250 km in 3 hours. Calculate its average speed. Enter your answer in km/h using the <pl-number-input> tag, accepting a tolerance of ±1 km/h.
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | — | Variable name to store data in. Note that this attribute has to be unique within a question, i.e., no value for this attribute should be repeated within a question.
 | integer | 1 | Weight to use when computing a weighted average score over elements.
 | boolean | false | List answer choices on a single line instead of as separate paragraphs.
 | integer | special | The total number of answer choices to display. Defaults to displaying all answers.
 | integer | special | The minimum number of correct answers to display. Defaults to displaying all correct answers.
 | integer | special | The maximum number of correct answers to display. Defaults to displaying all correct answers.
 | boolean | false | Disable the randomization of answer order.
 | boolean | false | Enable partial credit scores. By default, the choice of grading method is ""all-or-nothing"".
 | string | 'PC' | Three grading methods for partial credit: 'COV' (Coverage), 'EDC' (Every Decision Counts), and 'PC' (Percent Correct). See explanation below.
 | boolean | false | Help text with hint regarding the selection of answers. Popover button describes the selected grading algorithm ('all-or-nothing', 'COV', 'EDC' or 'PC')
 | boolean | false | Display the minimum and maximum number of options that can be selected in a valid submission. See explanation below.
 | boolean | false | Option to not display the correct answer in the correct panel.
 | boolean | false | Hide the letter keys in the answer list, i.e., (a), (b), (c), etc.
 | boolean | false | Hide badges next to selected answers.
 | integer | special | The minimum number of answers that must be selected in any valid submission. Defaults to
 | integer | special | The maximum number of answers that can be selected in any valid submission. Defaults to
 | boolean | false | Display the number of correct choices in the help text.
Attribute | Type | Default | Description
----------------------------------------
 | boolean | false | Is this a correct answer to the question?
 | string | — | Helper text (HTML) to be displayed to the student next to the option after question is graded if this option has been selected by the student.
","{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/element/checkbox', 'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/randomCheckbox'}","<p>A <code>pl-checkbox</code> element displays a subset of the answers in a random order
as checkboxes.</p>

<p>
  <img alt="""" src=""pl-checkbox.png""/>
</p>

<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-checkbox answers-name=""vpos"" weight=""1""&gt;
  &lt;pl-answer correct=""true""&gt;A-B&lt;/pl-answer&gt;
  &lt;pl-answer correct=""true""&gt;B-C&lt;/pl-answer&gt;
  &lt;pl-answer&gt; C-D&lt;/pl-answer&gt;
  &lt;pl-answer correct=""true""&gt;D-E&lt;/pl-answer&gt;
  &lt;pl-answer&gt; E-F&lt;/pl-answer&gt;
  &lt;pl-answer&gt; F-G&lt;/pl-answer&gt;
&lt;/pl-checkbox&gt;</code>
</pre>

<p>Inside the <code>pl-checkbox</code> element, each choice must be specified with
a <code>pl-answer</code> that has attributes:</p>

<p>Three grading methods are available when using <code>partial-credit=""true""</code>:</p>

<ul>
<li><code>'COV'</code> (Coverage): in this method, the final score is calculated by multiplying the <strong>base score</strong> (the proportion of correct answers that are chosen) with
  the <strong>guessing factor</strong> (the proportion of chosen answers that are correct). Specifically, if <code>t</code> is the number of correct answers chosen, <code>c</code> is the total number
  of correct answers, and <code>n</code> is the total number of answers chosen, then the final score is <code>(t / c) * (t / n)</code>. This grading scheme rewards submissions that include (i.e. ""cover"") all true options.</li>
</ul>

<li><code>'COV'</code> (Coverage): in this method, the final score is calculated by multiplying the <strong>base score</strong> (the proportion of correct answers that are chosen) with
  the <strong>guessing factor</strong> (the proportion of chosen answers that are correct). Specifically, if <code>t</code> is the number of correct answers chosen, <code>c</code> is the total number
  of correct answers, and <code>n</code> is the total number of answers chosen, then the final score is <code>(t / c) * (t / n)</code>. This grading scheme rewards submissions that include (i.e. ""cover"") all true options.</li>

<strong>base score</strong> (the proportion of correct answers that are chosen) with
  the 
<strong>guessing factor</strong> (the proportion of chosen answers that are correct). Specifically, if 
<ul>
<li><code>'EDC'</code> (Every Decision Counts): in this method, the checkbox answers are considered as a list of true/false answers. If <code>n</code> is the total number of answers, each answer is assigned <code>1/n</code> points. The total score is the summation of the points for every correct answer selected and every incorrect answer left unselected.</li>
</ul>

<li><code>'EDC'</code> (Every Decision Counts): in this method, the checkbox answers are considered as a list of true/false answers. If <code>n</code> is the total number of answers, each answer is assigned <code>1/n</code> points. The total score is the summation of the points for every correct answer selected and every incorrect answer left unselected.</li>

<ul>
<li><code>'PC'</code> (Percent Correct): in this method, 1 point is added for each correct answer that is marked as correct and 1 point is subtracted for each incorrect answer that is marked as correct. The final score is the resulting summation of points divided by the total number of correct answers. The minimum final score is set to zero.</li>
</ul>

<li><code>'PC'</code> (Percent Correct): in this method, 1 point is added for each correct answer that is marked as correct and 1 point is subtracted for each incorrect answer that is marked as correct. The final score is the resulting summation of points divided by the total number of correct answers. The minimum final score is set to zero.</li>

<p>The <code>detailed-help-text</code> attribute can be used with <code>min-correct</code> and/or <code>max-correct</code> to help students select the correct options. If <code>min-select</code> is not specified, then setting <code>detailed-help-text=""true""</code> ensures that the number of selected options in a valid submission is at least the value of <code>min-correct</code>. Similarly, if <code>max-select</code> is not specified, then setting <code>detailed-help-text=""true""</code> ensures that the number of selected options in a valid submission is at most the value of <code>max-correct</code>. For example, if a checkbox question does not specify <code>min-select</code> or <code>max-select</code>, and specifies <code>min-correct=""2""</code>, <code>max-correct=""4""</code>, and <code>detailed-help-text=""true""</code>, then all valid submissions must select between 2 and 4 options. Thus, we help students by preventing them from selecting, say, five options. Indeed, if five options are selected, then at least one selected option is incorrect since there are at most four correct options.</p>

<p>Note that explicitly specifying <code>min-select</code> overrides the minimum number of options that must be selected, and similarly, explicitly specifying <code>max-select</code> overrides the maximum number of options that can be selected.</p>

<p>The <code>min-select</code> and <code>max-select</code> attributes determine the minimum and maximum number of options that can be selected in a valid submission. The value of <code>min-select</code> is computed using the following steps:</p>

<ol>
<li>If the <code>min-select</code> attribute is explicitly set, then we use the specified value of <code>min-select</code>.</li>
<li>If <code>min-select</code> is not specified, but <code>min-correct</code> is specified along with <code>detailed-help-text=""true""</code>, then we use the specified value of <code>min-correct</code>.</li>
<li>If steps 1 and 2 do not apply, then we use a default value of 1.</li>
</ol>

<li>If the <code>min-select</code> attribute is explicitly set, then we use the specified value of <code>min-select</code>.</li>

<li>If <code>min-select</code> is not specified, but <code>min-correct</code> is specified along with <code>detailed-help-text=""true""</code>, then we use the specified value of <code>min-correct</code>.</li>

<li>If steps 1 and 2 do not apply, then we use a default value of 1.</li>

<p>To compute <code>max-select</code>, we use a similar algorithm (note the different default value in step 3):</p>

<ol>
<li>If the <code>max-select</code> attribute is explicitly set, then we use the specified value of <code>max-select</code>.</li>
<li>If <code>max-select</code> is not specified, but <code>max-correct</code> is specified along with <code>detailed-help-text=""true""</code>, then we use the specified value of <code>min-correct</code>.</li>
<li>If steps 1 and 2 do not apply, then <code>max-select</code> defaults to the number of displayed checkbox options (i.e. students can select all displayed options by default).</li>
</ol>

<li>If the <code>max-select</code> attribute is explicitly set, then we use the specified value of <code>max-select</code>.</li>

<li>If <code>max-select</code> is not specified, but <code>max-correct</code> is specified along with <code>detailed-help-text=""true""</code>, then we use the specified value of <code>min-correct</code>.</li>

<li>If steps 1 and 2 do not apply, then <code>max-select</code> defaults to the number of displayed checkbox options (i.e. students can select all displayed options by default).</li>

",pl-checkbox,"[{'question_html': '<pl-question-panel>\n    <p>\n        Questions below were designed to showcase the different features of\n        <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-checkbox-element""><code>pl-checkbox</code></a>.\n        The goal of <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-checkbox-element""><code>pl-checkbox</code></a>\n        is to allow users to select <b>multiple options</b> from a list of choices. To restrict choice to only one option, e.g.\n        what comes from a standard multiple choice, please consider using  <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl_multiple_choice-element""><code>pl_multiple_choice</code></a>.\n    </p>\n</pl-question-panel>\n\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 1\n    </div>\n\n    <div class=""card-body"">\n\n        <pl-question-panel>\n            <p>Here, you can observe the default behavior of the <code>pl-checkbox</code> element.\n                In particular, all options are shown after being randomized with help text at the bottom to remind users to select <b> all possible </b> options. </p>\n            <p> Group work provides which of the following benefits: </p>\n        </pl-question-panel>\n\n        <pl-checkbox answers-name=""group_ans_original"">\n          <pl-answer correct=""true"">Exposure to new viewpoints from different fields and life experiences.</pl-answer>\n          <pl-answer correct=""true"">Improved creativity and overall work quality.</pl-answer>\n          <pl-answer>               The ability to work on a project by yourself.</pl-answer>\n          <pl-answer>               Having only one person make all of the decisions.</pl-answer>\n          <pl-answer correct=""true"">Constructive dialog and increased internal group motivation.</pl-answer>\n          <pl-answer correct=""true"">Personal accountability to the team to work on a project.</pl-answer>\n          <pl-answer correct=""true"">Friendship.</pl-answer>\n          <pl-answer>               The resources to work on a small project instead of a large project. </pl-answer>\n          <pl-answer correct=""true"">Prepares you for a team-environment in the workplace or a research group.</pl-answer>\n        </pl-checkbox>\n\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 2\n    </div>\n\n    <div class=""card-body"">\n\n        <pl-question-panel>\n            <p>Here, the <code>pl-checkbox</code> element is restricted to displaying no more than <b>5</b> choices with between <b>2</b> to <b>4</b> correct answers.\n               Information regarding the range of correct answers users should select can be displayed by setting <code>detailed-help-text=""true""</code></p>\n            <p> Group work provides which of the following benefits: </p>\n        </pl-question-panel>\n\n        <pl-checkbox answers-name=""group_ans_restricted"" min-correct=""2"" max-correct=""4"" number-answers=""5"" detailed-help-text=""true"">\n          <pl-answer correct=""true"">Exposure to new viewpoints from different fields and life experiences.</pl-answer>\n          <pl-answer correct=""true"">Improved creativity and overall work quality.</pl-answer>\n          <pl-answer>               The ability to work on a project by yourself.</pl-answer>\n          <pl-answer>               Having only one person make all of the decisions.</pl-answer>\n          <pl-answer correct=""true"">Constructive dialog and increased internal group motivation.</pl-answer>\n          <pl-answer correct=""true"">Personal accountability to the team to work on a project.</pl-answer>\n          <pl-answer correct=""true"">Friendship.</pl-answer>\n          <pl-answer>               The resources to work on a small project instead of a large project. </pl-answer>\n          <pl-answer correct=""true"">Prepares you for a team-environment in the workplace or a research group.</pl-answer>\n        </pl-checkbox>\n\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 3\n    </div>\n\n    <div class=""card-body"">\n\n        <pl-question-panel>\n            <p>Here, the <code>pl-checkbox</code> element displays options as they were written, e.g. <code>fixed-order=""true""</code>, and gives more point weight to this question vs. priors, e.g. <code>weight=""3""</code>  </p>\n            <p> Group work provides which of the following benefits: </p>\n        </pl-question-panel>\n\n        <pl-checkbox answers-name=""group_ans_fixed"" fixed-order=""true"" weight=""3"">\n          <pl-answer correct=""true"">Exposure to new viewpoints from different fields and life experiences.</pl-answer>\n          <pl-answer correct=""true"">Improved creativity and overall work quality.</pl-answer>\n          <pl-answer>               The ability to work on a project by yourself.</pl-answer>\n          <pl-answer>               Having only one person make all of the decisions.</pl-answer>\n          <pl-answer correct=""true"">Constructive dialog and increased internal group motivation.</pl-answer>\n          <pl-answer correct=""true"">Personal accountability to the team to work on a project.</pl-answer>\n          <pl-answer correct=""true"">Friendship.</pl-answer>\n          <pl-answer>               The resources to work on a small project instead of a large project. </pl-answer>\n          <pl-answer correct=""true"">Prepares you for a team-environment in the workplace or a research group.</pl-answer>\n        </pl-checkbox>\n\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 4\n    </div>\n\n    <div class=""card-body"">\n\n        <pl-question-panel>\n            <p>Here, options are displayed on the same line with <code>inline=""true""</code> and the help text is suppressed with <code>hide-help-text = ""true""</code>.\n                Displaying options inline is only ideal if the choice options are not verbose and the number of choices is low. </p>\n            <p> Group work provides which of the following benefits: </p>\n        </pl-question-panel>\n\n        <pl-checkbox answers-name=""group_ans_v4"" inline=""true"" number-answers=""3"" hide-help-text=""true"">\n          <pl-answer correct=""true"">Exposure to new viewpoints from different fields and life experiences.</pl-answer>\n          <pl-answer correct=""true"">Improved creativity and overall work quality.</pl-answer>\n          <pl-answer>               The ability to work on a project by yourself.</pl-answer>\n          <pl-answer>               Having only one person make all of the decisions.</pl-answer>\n          <pl-answer correct=""true"">Constructive dialog and increased internal group motivation.</pl-answer>\n          <pl-answer correct=""true"">Personal accountability to the team to work on a project.</pl-answer>\n          <pl-answer correct=""true"">Friendship.</pl-answer>\n          <pl-answer>               The resources to work on a small project instead of a large project. </pl-answer>\n          <pl-answer correct=""true"">Prepares you for a team-environment in the workplace or a research group.</pl-answer>\n        </pl-checkbox>\n\n    </div>\n</div>\n\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 5\n    </div>\n\n    <div class=""card-body"">\n\n        <pl-question-panel>\n            <p>Here, partial credit is given with <code>partial-credit=""true""</code>, using the default grading algorithm (click the question mark to see help text that explains this algorithm). Since partial credit is given, no feedback is provided on the correctness of individual selections until this question variant can no longer be answered (view in student mode to see the result).</p>\n\n            <p> Group work provides which of the following benefits: </p>\n        </pl-question-panel>\n\n        <pl-checkbox answers-name=""group_ans_v5"" partial-credit=""true"">\n          <pl-answer correct=""true"">Exposure to new viewpoints from different fields and life experiences.</pl-answer>\n          <pl-answer correct=""true"">Improved creativity and overall work quality.</pl-answer>\n          <pl-answer>               The ability to work on a project by yourself.</pl-answer>\n          <pl-answer>               Having only one person make all of the decisions.</pl-answer>\n          <pl-answer correct=""true"">Constructive dialog and increased internal group motivation.</pl-answer>\n          <pl-answer correct=""true"">Personal accountability to the team to work on a project.</pl-answer>\n          <pl-answer correct=""true"">Friendship.</pl-answer>\n          <pl-answer>               The resources to work on a small project instead of a large project. </pl-answer>\n          <pl-answer correct=""true"">Prepares you for a team-environment in the workplace or a research group.</pl-answer>\n        </pl-checkbox>\n\n    </div>\n</div>\n\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 6\n    </div>\n\n    <div class=""card-body"">\n\n        <pl-question-panel>\n            <p>Here, partial credit is given with <code>partial-credit=""true""</code>, using the ""every decision counts (EDC)"" grading algorithm with <code>partial-credit-method=""EDC""</code> (click the question mark to see help text that explains this algorithm). Since partial credit is given, no feedback is provided on the correctness of individual selections until this question variant can no longer be answered (view in student mode to see the result).</p>\n\n            <p> Group work provides which of the following benefits: </p>\n        </pl-question-panel>\n\n        <pl-checkbox answers-name=""group_ans_v6"" partial-credit=""true"" partial-credit-method=""EDC"">\n          <pl-answer correct=""true"">Exposure to new viewpoints from different fields and life experiences.</pl-answer>\n          <pl-answer correct=""true"">Improved creativity and overall work quality.</pl-answer>\n          <pl-answer>               The ability to work on a project by yourself.</pl-answer>\n          <pl-answer>               Having only one person make all of the decisions.</pl-answer>\n          <pl-answer correct=""true"">Constructive dialog and increased internal group motivation.</pl-answer>\n          <pl-answer correct=""true"">Personal accountability to the team to work on a project.</pl-answer>\n          <pl-answer correct=""true"">Friendship.</pl-answer>\n          <pl-answer>               The resources to work on a small project instead of a large project. </pl-answer>\n          <pl-answer correct=""true"">Prepares you for a team-environment in the workplace or a research group.</pl-answer>\n        </pl-checkbox>\n\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 7\n    </div>\n\n    <div class=""card-body"">\n\n        <pl-question-panel>\n            <p>Here, partial credit is given with <code>partial-credit=""true""</code>, using the ""coverage (COV)"" grading algorithm with <code>partial-credit-method=""COV""</code> (click the question mark to see help text that explains this algorithm). Since partial credit is given, no feedback is provided on the correctness of individual selections until this question variant can no longer be answered (view in student mode to see the result).\n                We have also set <code>show-number-correct=""true""</code> so that the number of correct options is displayed in the help text at the bottom of the question.</p>\n\n            <p> Group work provides which of the following benefits: </p>\n        </pl-question-panel>\n\n        <pl-checkbox answers-name=""group_ans_v7"" partial-credit=""true"" partial-credit-method=""COV"" show-number-correct=""true"">\n          <pl-answer correct=""true"">Exposure to new viewpoints from different fields and life experiences.</pl-answer>\n          <pl-answer correct=""true"">Improved creativity and overall work quality.</pl-answer>\n          <pl-answer>               The ability to work on a project by yourself.</pl-answer>\n          <pl-answer>               Having only one person make all of the decisions.</pl-answer>\n          <pl-answer correct=""true"">Constructive dialog and increased internal group motivation.</pl-answer>\n          <pl-answer correct=""true"">Personal accountability to the team to work on a project.</pl-answer>\n          <pl-answer correct=""true"">Friendship.</pl-answer>\n          <pl-answer>               The resources to work on a small project instead of a large project. </pl-answer>\n          <pl-answer correct=""true"">Prepares you for a team-environment in the workplace or a research group.</pl-answer>\n        </pl-checkbox>\n\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 8\n    </div>\n\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>Here, letter keys are hidden with <code>hide-letter-keys=""true""</code>. This option is especially useful when the answer options themselves are letters.</p>\n\n            <p>Group work provides which of the following benefits:</p>\n        </pl-question-panel>\n\n        <pl-checkbox answers-name=""group_ans_v8"" hide-letter-keys=""true"">\n            <pl-answer correct=""true"">Exposure to new viewpoints from different fields and life experiences.</pl-answer>\n            <pl-answer correct=""true"">Improved creativity and overall work quality.</pl-answer>\n            <pl-answer>               The ability to work on a project by yourself.</pl-answer>\n            <pl-answer>               Having only one person make all of the decisions.</pl-answer>\n            <pl-answer correct=""true"">Constructive dialog and increased internal group motivation.</pl-answer>\n            <pl-answer correct=""true"">Personal accountability to the team to work on a project.</pl-answer>\n            <pl-answer correct=""true"">Friendship.</pl-answer>\n            <pl-answer>               The resources to work on a small project instead of a large project. </pl-answer>\n            <pl-answer correct=""true"">Prepares you for a team-environment in the workplace or a research group.</pl-answer>\n        </pl-checkbox>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 9\n    </div>\n\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>Here, we set <code>min-select=""3""</code> and <code>max-select=""8""</code> to restrict the number of answers that can be selected.\n                Any submission that selects less than 3 answers or more than 8 answers is marked as invalid.</p>\n        </pl-question-panel>\n\n        <pl-checkbox answers-name=""group_ans_v9"" hide-letter-keys=""true"" min-select=""3"" max-select=""8"">\n            <pl-answer correct=""true"">Exposure to new viewpoints from different fields and life experiences.</pl-answer>\n            <pl-answer correct=""true"">Improved creativity and overall work quality.</pl-answer>\n            <pl-answer>               The ability to work on a project by yourself.</pl-answer>\n            <pl-answer>               Having only one person make all of the decisions.</pl-answer>\n            <pl-answer correct=""true"">Constructive dialog and increased internal group motivation.</pl-answer>\n            <pl-answer correct=""true"">Personal accountability to the team to work on a project.</pl-answer>\n            <pl-answer correct=""true"">Friendship.</pl-answer>\n            <pl-answer>               The resources to work on a small project instead of a large project. </pl-answer>\n            <pl-answer correct=""true"">Prepares you for a team-environment in the workplace or a research group.</pl-answer>\n        </pl-checkbox>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 10\n    </div>\n\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>Here, you can observe the behavior of the <code>feedback</code> attribute in <code>pl-answer</code>. Feedback is expected to convey a small piece of information that explains why an \n                answer is correct or incorrect. When an answer with a feedback setting is selected and graded, a small box containing the feedback is displayed next to the answer.</p>\n\n            <p>Group work provides which of the following benefits:</p>\n        </pl-question-panel>\n\n        <pl-checkbox answers-name=""group_ans_v10"" hide-letter-keys=""true"" min-select=""3"" max-select=""8"">\n            <pl-answer correct=""true"" feedback=""Correct, it\'s important for everyone\'s point of view to be expressed equally."">Exposure to new viewpoints from different fields and life experiences.</pl-answer>\n            <pl-answer correct=""true"" feedback=""Correct, teams are generally more productive than a single person."">           Improved creativity and overall work quality.</pl-answer>\n            <pl-answer feedback=""Incorrect, people in groups work together, not alone."">                                       The ability to work on a project by yourself.</pl-answer>\n            <pl-answer feedback=""Incorrect, everyone in a group should have a say in decisions being made."">                   Having only one person make all of the decisions.</pl-answer>\n            <pl-answer correct=""true"" feedback=""Correct, this increases the quality of work done overall."">                    Constructive dialog and increased internal group motivation.</pl-answer>\n            <pl-answer correct=""true"" feedback=""Correct, this makes it easier to get work done on time."">                      Personal accountability to the team to work on a project.</pl-answer>\n            <pl-answer correct=""true"" feedback=""Correct, working with someone on a project is a great way to bond with them.""> Friendship.</pl-answer>\n            <pl-answer feedback=""Incorrect, groups generally work on large projects."">                                         The resources to work on a small project instead of a large project. </pl-answer>\n            <pl-answer correct=""true"" feedback=""Correct, most of the work done in these spaces is done through teams."">        Prepares you for a team-environment in the workplace or a research group.</pl-answer>\n        </pl-checkbox>\n    </div>\n</div>\n', 'server_file': 'import random\n\n\ndef generate(data):\n    # Sample two random integers between 5 and 10 (inclusive)\n    a = random.randint(5, 10)\n    b = random.randint(5, 10)\n\n    # Put these two integers into data[\'params\']\n    data[""params""][""a""] = a\n    data[""params""][""b""] = b\n\n    # Compute the sum of these two integers\n    c = a + b\n\n    # Put the sum into data[\'correct_answers\']\n    data[""correct_answers""][""c""] = c\n'}, {'question_html': '<pl-question-panel>\n  <p>\n    Select the matrices below with dimensions ${{params.N}}\\times{{params.N}}$:\n  </p>\n</pl-question-panel>\n<pl-checkbox answers-name=\'students\' hide-answer-panel=""true"">\n  <pl-answer correct=""true"">\n    $<pl-matrix-latex params-name=""N1""></pl-matrix-latex>$\n  </pl-answer>\n  <pl-answer correct=""true"">\n    $<pl-matrix-latex params-name=""N2""></pl-matrix-latex>$\n  </pl-answer>\n  <pl-answer correct=""false"">\n    $<pl-matrix-latex params-name=""M1""></pl-matrix-latex>$\n  </pl-answer>\n  <pl-answer correct=""false"">\n    $<pl-matrix-latex params-name=""M2""></pl-matrix-latex>$\n  </pl-answer>\n  <pl-answer correct=""false"">\n    $<pl-matrix-latex params-name=""M3""></pl-matrix-latex>$\n  </pl-answer>\n  <pl-answer correct=""false"">\n    $<pl-matrix-latex params-name=""M4""></pl-matrix-latex>$\n  </pl-answer>\n</pl-checkbox>\n', 'server_file': 'import random\n\nimport numpy as np\nimport prairielearn as pl\n\n\ndef generate(data):\n    N = random.choice([2, 3])\n    data[""params""][""N""] = N\n    for i in range(2):\n        X = np.random.rand(N, N)\n        name = ""N"" + str(i + 1)\n        data[""params""][name] = pl.to_json(X)\n    for i in range(4):\n        M = random.choice([j for j in range(2, 5) if j not in [N]])\n        X = np.random.rand(M, M)\n        name = ""M"" + str(i + 1)\n        data[""params""][name] = pl.to_json(X)\n'}]","
description:

The `pl-checkbox` HTML tag is designed to present multiple-choice questions in the form of checkboxes, where students can select multiple answers. This element not only enhances user interactivity by providing random ordering of the answers for each attempt, but it also incorporates advanced grading options for partial credits. It is particularly useful in educational contexts where assessments require evaluating students' understanding of material by allowing them to select multiple correct answers while also keeping track of the correct and incorrect selections to provide a nuanced scoring system. This tag should be used in scenarios where questions can have more than one correct answer, and where providing feedback based on selections is desired.

use_cases:
- Creating quizzes where multiple correct answers exist, allowing for better testing of student knowledge about complex topics.
- Applying different grading methods to assess students more fairly based on their selected answers, encouraging deeper engagement with the material.
- Using the randomization feature to minimize answer ordering bias, making each student's quiz experience more unique.

example_questions:
- Which of the following animals are mammals? (Select all that apply: a) Dog, b) Shark, c) Eagle, d) Human)
- Select all the elements that are considered noble gases. (a) Helium, (b) Oxygen, (c) Neon, (d) Argon
- Identify all the programming languages listed below. (a) Python, (b) HTML, (c) JavaScript, (d) CSS)
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | — | Name of image file.
 | text | 'static' | Type of file, either 'static' (an existing file) or 'dynamic' (a file generated by element or server code).
 | text | ""clientFilesQuestion"" | The directory that contains the file, either 'clientFilesQuestion' or 'clientFilesCourse' (see
 | number |  | Width of image (e.g., '250px').
 | boolean | false | Display figure inline with text (true) or on a separate line (false).
 | text | """" | Provide alt (alternative) text to improve accessibility of figures by describing the image or the purpose of the image. Default is an empty string.
","{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/element/figure', 'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/randomPlot', 'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/fixedCheckbox'}","<p>Display a statically or dynamically generated image.</p>

<p>
  <img alt="""" src=""pl-figure.png""/>
</p>

<pre class=""highlight"">
  <code class=""language-html"">&lt;!-- show a figure from an existing file --&gt;
&lt;pl-figure file-name=""figure.png"" directory=""clientFilesCourse""&gt;&lt;/pl-figure&gt;

&lt;!-- show a figure from a file that is generated by code --&gt;
&lt;pl-figure file-name=""figure.png"" type=""dynamic""&gt;&lt;/pl-figure&gt;</code>
</pre>

<p>If <code>type=""dynamic""</code>, then the contents of the image file must be returned by a function <code>file()</code> that is located either in element code or in <code>server.py</code>. The contents must be a string (with utf-8 encoding), a bytes-like object, or a file-like object. The filename will be available to this function as <code>data[""filename""]</code>. For example, to generate the <code>figure.png</code> for the dynamic <code>pl-figure</code> above, this code might appear in <code>server.py</code> to generate a ""fake"" <code>figure.png</code>:</p>

<pre class=""highlight"">
  <code class=""language-python"">def file(data):
    if data[""filename""]==""figure.png"":
        plt.plot([1,2,3],[3,4,-2])
        buf = io.BytesIO()
        plt.savefig(buf,format=""png"")
        return buf</code>
</pre>

<p>If <code>file()</code> does not return anything, it will be treated as if <code>file()</code> returned the empty string.</p>

",pl-figure,"[{'question_html': '<pl-question-panel>\n    <p>\n        The examples below showcase different features of <code>pl-figure</code>.\n        The goal of this element is to display statically and dynamically generated images.\n    </p>\n</pl-question-panel>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 1\n    </div>\n\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Here is an example of of a static figure.\n                By default, <code>pl-figure</code> will read static files from the <code>clientFilesQuestion</code> directory or from <code>clientFilesCourse</code> directory if overridden using the <code>directory</code> attribute.\n                Depending on the display size of the window, the size of the displayed figure will automatically adjust to fit within the window.\n            </p>\n            <pl-figure file-name=""sin-x.png"" alt=""Graph of a sine wave""></pl-figure>\n        </pl-question-panel>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 2\n    </div>\n\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Here is an example of a fixed width figure.\n                The width of the displayed figure can be set using the <code>width</code> attribute; the size of the figure will automatically shrink if the the specified <code>width</code> is too big for the display window.\n            </p>\n            <pl-figure file-name=""sin-x.png"" width=""300px"" alt=""Graph of a sine wave""></pl-figure>\n        </pl-question-panel>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 3\n    </div>\n\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Here is an example of a dynamic figure.  The contents of a dynamic image can be generated using the <code>file()</code> function inside <code>server.py</code> when\n                the attribute <code>type=""dynamic""</code> is set in the element tag.\n            </p>\n            <pl-figure file-name=""cos-x.png"" type=""dynamic"" alt=""Graph of 1*cos(x) function""></pl-figure>\n        </pl-question-panel>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Part 4\n    </div>\n\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Here is an example of inline figures.\n            </p>\n            <br>\n            <p>\n                Select <pl-figure file-name=""true.png"" inline=""true"" alt=""Slider set to true""></pl-figure> instead of <pl-figure file-name=""false.png"" inline=""true"" alt=""Slider set to false""></pl-figure> from below.\n            </p>\n        </pl-question-panel>\n        <pl-multiple-choice answers-name=""booleans"">\n            <pl-answer correct=""true"">Select this: <pl-figure file-name=""true.png"" inline=""true"" alt=""Slider set to true""></pl-figure></pl-answer>\n            <pl-answer>Not this: <pl-figure file-name=""false.png"" inline=""true"" alt=""Slider set to false""></pl-figure></pl-answer>\n        </pl-multiple-choice>\n        <br>\n        <p>\n            Use <code>inline=""true""</code> to embed a figure inline with the rest of the elements, like texts.\n</p>\n    </div>\n</div>\n', 'server_file': 'import io\nimport random\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\ndef file(data):\n    if data[""filename""] == ""cos-x.png"":\n        # data points\n        # coeff cos(x) from -5 * pi 5 * pi, stepping 0.01\n        coeff = random.randint(1, 5)\n        x = np.arange(-5 * np.pi, 5 * np.pi, 0.01)\n        y = coeff * np.cos(x)\n\n        # create plot\n        plt.plot(x, y)\n        plt.title(f""{coeff} * cos(x)"")\n        plt.xlabel(""x values"")\n        plt.ylabel(""y values"")\n        plt.ylim(-6, 6)\n\n        # save plot as utf-8 bytes\n        f = io.BytesIO()\n        plt.savefig(f, format=""png"")\n        return f\n'}, {'question_html': '<pl-question-panel>\n    <!-- ""figure.png"" here is not a physical file. Since this pl-figure is the ""dynamic"" type, the figure is generated via server.py\'s `file()`. -->\n    <pl-figure file-name=""figure.png"" type=""dynamic"" width=""500px""></pl-figure>\n    <p>\n        What is $f({{params.x}})$?\n    </p>\n</pl-question-panel>\n<pl-number-input answers-name=""f"" comparison=""decdig"" digits=""0"" label=""$f({{params.x}})=$"" display=""block""></pl-number-input>\n', 'server_file': 'import io\nimport random\n\nimport matplotlib.pyplot as plt\nimport numpy\n\n\ndef file(data):\n    if data[""filename""] == ""figure.png"":\n        # Create the figure\n        x = numpy.linspace(-5, 5)\n        f = data[""params""][""m""] * x + data[""params""][""b""]\n        fig = plt.figure()\n        plt.plot(x, f)\n        plt.xticks([x for x in range(-5, 6, 1)], fontsize=14)\n\n        fmin = int(numpy.floor(min(f)) - 1)\n        fmax = int(numpy.ceil(max(f)) + 1)\n        if fmax - fmin > 12:\n            plt.yticks([y for y in range(fmin, fmax + 4, 4)], fontsize=14)\n            plt.gca().set_yticks([y for y in range(fmin, fmax + 1, 1)], minor=True)\n            plt.gca().yaxis.grid(True, ""minor"")\n        else:\n            plt.yticks([y for y in range(fmin, fmax + 1, 1)], fontsize=14)\n        plt.grid()\n        plt.xlabel(""$x$"", fontsize=18)\n        plt.ylabel(""$f(x)$"", fontsize=18)\n        plt.autoscale(enable=True, tight=True)\n        fig.set_tight_layout(True)\n\n        # Save the figure and return it as a buffer\n        buf = io.BytesIO()\n        plt.savefig(buf, format=""png"")\n        return buf\n\n\ndef generate(data):\n    # Pick a non-zero slope\n    while True:\n        m = random.randint(-2, 2)\n        if m != 0:\n            break\n\n    # Pick a y-intercept\n    b = random.randint(-3, 3)\n\n    # Pick x\n    x = random.randint(-5, 5)\n\n    # Find f(x)\n    f = m * x + b\n\n    data[""params""][""m""] = m\n    data[""params""][""b""] = b\n    data[""params""][""x""] = x\n    data[""correct_answers""][""f""] = f\n'}, {'question_html': '<pl-question-panel>\n  <p>An object\'s motion is described by the position-time graph below.</p>\n\n  <pl-figure file-name=""graph.png""></pl-figure>\n</pl-question-panel>\n\n<pl-question-panel><hr></pl-question-panel>\n\n<pl-question-panel>\n  <p>Select all regions where the object\'s velocity is primarily positive.</p>\n</pl-question-panel>\n<pl-checkbox answers-name=""vpos"" weight=""1"" inline=""true"">\n  <pl-answer correct=""true"">A-B</pl-answer>\n  <pl-answer correct=""true"">B-C</pl-answer>\n  <pl-answer>               C-D</pl-answer>\n  <pl-answer correct=""true"">D-E</pl-answer>\n  <pl-answer>               E-F</pl-answer>\n  <pl-answer>               F-G</pl-answer>\n</pl-checkbox>\n\n\n', 'server_file': 'import io\nimport random\n\nimport matplotlib.pyplot as plt\nimport numpy\n\n\ndef file(data):\n    if data[""filename""] == ""figure.png"":\n        # Create the figure\n        x = numpy.linspace(-5, 5)\n        f = data[""params""][""m""] * x + data[""params""][""b""]\n        fig = plt.figure()\n        plt.plot(x, f)\n        plt.xticks([x for x in range(-5, 6, 1)], fontsize=14)\n\n        fmin = int(numpy.floor(min(f)) - 1)\n        fmax = int(numpy.ceil(max(f)) + 1)\n        if fmax - fmin > 12:\n            plt.yticks([y for y in range(fmin, fmax + 4, 4)], fontsize=14)\n            plt.gca().set_yticks([y for y in range(fmin, fmax + 1, 1)], minor=True)\n            plt.gca().yaxis.grid(True, ""minor"")\n        else:\n            plt.yticks([y for y in range(fmin, fmax + 1, 1)], fontsize=14)\n        plt.grid()\n        plt.xlabel(""$x$"", fontsize=18)\n        plt.ylabel(""$f(x)$"", fontsize=18)\n        plt.autoscale(enable=True, tight=True)\n        fig.set_tight_layout(True)\n\n        # Save the figure and return it as a buffer\n        buf = io.BytesIO()\n        plt.savefig(buf, format=""png"")\n        return buf\n\n\ndef generate(data):\n    # Pick a non-zero slope\n    while True:\n        m = random.randint(-2, 2)\n        if m != 0:\n            break\n\n    # Pick a y-intercept\n    b = random.randint(-3, 3)\n\n    # Pick x\n    x = random.randint(-5, 5)\n\n    # Find f(x)\n    f = m * x + b\n\n    data[""params""][""m""] = m\n    data[""params""][""b""] = b\n    data[""params""][""x""] = x\n    data[""correct_answers""][""f""] = f\n'}]","
description:

The <pl-figure> tag is designed to embed images into web pages, allowing for both static and dynamically generated content. It enhances visual representation in educational materials or web applications. Use this tag when you want to display images, particularly when the image source may be dynamic, generated on-the-fly, or simply stored in a specified directory. This tag is particularly important for creating interactive and responsive content in learning environments, such as online quizzes, where images may need to change based on user inputs or programmatic responses.

use_cases:
- Displaying a static diagram in an online course module to illustrate a concept, like a flowchart or a graph. Since the diagram is important for the lesson, using <pl-figure> ensures it's properly embedded and easily visible to students.
- Generating and displaying dynamically created plots or charts based on user input from a web application. This is useful in data science or mathematics courses where results should be presented visually.
- In an online quiz, showing an image of a historical figure or an artwork where students need to identify it as part of their answers. Using <pl-figure> ensures that the image appears correctly within the quiz interface.

example_questions:
- What is depicted in the image shown using the <pl-figure> tag? Describe its characteristics and significance.
- Refer to the graph displayed through the <pl-figure> tag. What trends can you observe, and what do they indicate?
- In the image provided via the <pl-figure> tag, identify the figure and discuss their relevance in the context of your studies.
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | — | Variable name to store data in. Note that this attribute has to be unique within a question, i.e., no value for this attribute should be repeated within a question.
 | integer | 1 | Weight to use when computing a weighted average score over elements.
 | string | special | Correct answer for grading. Defaults to
 | boolean | false | Whether or not an empty input box is allowed. By default, empty input boxes will not be graded (invalid format).
 | integer | 0 (zero) | Value to be used as an answer if element is left blank. Only applied if
 | text | — | A prefix to display before the input box (e.g.,
 | text | — | A suffix to display after the input box (e.g.,
 | integer | 10 | The base used to parse and represent the answer, or the special value 0 (see below).
 | ""block"" or ""inline"" | ""inline"" | How to display the input field.
 | integer | 35 | Size of the input box.
 | boolean | true | Show the question mark at the end of the input displaying required input parameters.
 | string | - | Custom placeholder text. If not set, defaults to ""integer"" if
 | boolean | true | Whether to show the score badge next to this element.
",{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/element/integerInput'},"<p>Fill in the blank field that requires an <strong>integer</strong> input.</p>

<p>
  <img alt="""" src=""pl-integer-input.png""/>
</p>

<p>
  <strong>question.html</strong>
</p>

<strong>question.html</strong>
<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-integer-input answers-name=""int_value"" label=""$y =$""&gt;&lt;/pl-integer-input&gt;</code>
</pre>

<p>
  <strong>server.py</strong>
</p>

<strong>server.py</strong>
<pre class=""highlight"">
  <code class=""language-python"">import random

def generate(data):

    # Generate a random whole number
    x = random.randint(1, 10)

    # Answer to fill in the blank input
    data[""correct_answers""][""int_value""] = x</code>
</pre>

<p>By default, the values are interpreted in base 10. The <code>base</code> argument may also be used, with a value between 2 and 36, to indicate a different base to interpret the student input, as well as to print the final result.</p>

<p>The <code>base</code> argument can also accept a special value of 0. In this case, the values will by default be interpreted in base 10, however the student has the option of using different prefixes to indicate a value in a different format:</p>

<ul>
<li>The prefixes <code>0x</code> and <code>0X</code> can be used for base-16 values (e.g., <code>0x1a</code>);</li>
<li>The prefixes <code>0b</code> and <code>0B</code> can be used for base-2 values (e.g., <code>0b1101</code>);</li>
<li>The prefixes <code>0o</code> and <code>0O</code> can be used for base-8 values (e.g., <code>0o777</code>).</li>
</ul>

<li>The prefixes <code>0x</code> and <code>0X</code> can be used for base-16 values (e.g., <code>0x1a</code>);</li>

<li>The prefixes <code>0b</code> and <code>0B</code> can be used for base-2 values (e.g., <code>0b1101</code>);</li>

<li>The prefixes <code>0o</code> and <code>0O</code> can be used for base-8 values (e.g., <code>0o777</code>).</li>

<p>pl-integer-input can accept integers of unbounded size, however the correct answer will only be stored as the Python <code>int</code> if it is between -9007199254740991 and +9007199254740991 (between -(2^53 - 1) and +(2^53 - 1)). Otherwise, the correct answer will be stored as a string. This distinction is important in <code>server.py</code> scripts for <code>parse()</code> and <code>grade()</code>, as well as downloaded assessment results.</p>

<p>Note that answers can include underscores which are ignored (i.e., <code>1_000</code> will be parsed as <code>1000</code>).</p>

",pl-integer-input,"[{'question_html': '<pl-question-panel>\n  <p>\n    Questions below were designed to showcase the different features of\n    <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-integer-input-element""\n      ><code>pl-integer-input</code></a\n    >. The goal of\n    <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-integer-input-element""\n      ><code>pl-integer-input</code></a\n    >\n    is to allow users to enter only <b>integer values</b>. That is, users are only able to enter\n    whole numbers like -10, 0, 3, 44, and so on. The correct value of $c$ in all questions below is\n    <samp>{{correct_answers.c_1}}</samp>.\n  </p>\n</pl-question-panel>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        Within this question, you can observe the default behavior of the\n        <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-integer-input-element""\n          ><code>pl-integer-input</code></a\n        >\n        element. In particular, the default input field has help text of ""integer"" as a placeholder\n        as well as a question button.\n      </p>\n      <p>Solve for the value of $c$ given $c = {{params.a}} + {{params.b}}$</p>\n    </pl-question-panel>\n    <pl-integer-input answers-name=""c_1""></pl-integer-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        Under this variant, we opt to provide a label for\n        <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-integer-input-element""\n          ><code>pl-integer-input</code></a\n        >\n        In addition, we\'ve opted to add a suffix or a unit classification to the input via\n        <code>suffix=""units""</code>.\n      </p>\n      <p>Solve for the value of $c$ given $c = {{params.a}} + {{params.b}}$</p>\n    </pl-question-panel>\n    <pl-integer-input answers-name=""c_2"" label=""$c = $"" suffix=""units""></pl-integer-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        Within this variant, the different display options for\n        <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-integer-input-element""\n          ><code>pl-integer-input</code></a\n        >\n        on the page are displayed. Specifically, this question uses the block option\n        (<code>display=""block""</code>) to display the input field on its own line instead of being\n        inline with the question. Moreover, the weight for answering this question is higher than\n        its predecessors.\n      </p>\n      <p>Solve for the value of $c$ given $c = {{params.a}} + {{params.b}}$</p>\n    </pl-question-panel>\n    <pl-integer-input answers-name=""c_4"" display=""block"" weight=""4""></pl-integer-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        The size of the input box can be set with the attribute <code>size</code>, and the attribute\n        <code>show-help-text=""false""</code> removes the button for the help popup. This box below\n        has <code>size=5</code> instead of the default <code>size=35</code>.\n      </p>\n      <p>Solve for the value of $c$ given $c = {{params.a}} + {{params.b}}$</p>\n    </pl-question-panel>\n    <pl-integer-input answers-name=""c_5"" size=""5"" show-help-text=""false""></pl-integer-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        This question uses the <code>blank-answer</code> to specify a value to be used if the user\n        leaves it blank.\n      </p>\n      <p>\n        Solve for the value of $c$ given $c = 0^n$ for $n = 1$ (leave the question blank if the\n        value is zero).\n      </p>\n    </pl-question-panel>\n    <pl-integer-input\n      answers-name=""c_6""\n      allow-blank=""true""\n      blank-value=""0""\n      correct-answer=""0""\n    ></pl-integer-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>The integer can also be expected to be provided in a different base.</p>\n      <p>\n        Solve for the value of $c$ given $c = {{params.a16}}_{16} + {{params.b16}}_{16}$ (provide\n        your answer in base $16$ and base $2$).\n      </p>\n    </pl-question-panel>\n    <pl-integer-input answers-name=""c_7_b16"" base=""16""></pl-integer-input>\n    <pl-integer-input answers-name=""c_7_b2"" base=""2""></pl-integer-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        The submitted integer can also be very large. This question changes the placeholder text by\n        setting the <code>placeholder</code> attribute.\n      </p>\n      <p>Submit <code>{{correct_answers.c_large}}</code>.</p>\n    </pl-question-panel>\n    <pl-integer-input answers-name=""c_large"" placeholder=""very large integer""></pl-integer-input>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        The correct answer can also be specified using certain JSON serialized integer types. The\n        correct answer here is specified using a numpy <code>int64</code>. We also set\n        <code>show-score=""False""</code> to hide the score badge.\n      </p>\n      <p>Submit <code>{{params.d}}</code>.</p>\n    </pl-question-panel>\n    <pl-integer-input answers-name=""c_np"" show-score=""False""></pl-integer-input>\n  </div>\n</div>\n', 'server_file': 'import random\n\nimport numpy as np\nimport prairielearn as pl\n\n\ndef generate(data):\n    # Simulate values\n    a = random.randint(2, 10)\n    b = random.randint(2, 10)\n    a16 = random.randint(0xA, 0x1F)\n    b16 = random.randint(0xA, 0x1F)\n\n    # Compute answer\n    c = a + b\n    c16 = a16 + b16\n\n    # Release parameters\n    data[""params""][""a""] = a\n    data[""params""][""b""] = b\n\n    data[""params""][""a16""] = f""{a16:X}""\n    data[""params""][""b16""] = f""{b16:X}""\n\n    # Release correct answer\n    data[""correct_answers""][""c_1""] = c\n    data[""correct_answers""][""c_2""] = c\n    data[""correct_answers""][""c_4""] = str(c)\n    data[""correct_answers""][""c_5""] = str(c)\n    data[""correct_answers""][""c_7_b16""] = c16\n    data[""correct_answers""][""c_7_b2""] = c16\n\n    c_large = ""9007199254740991999""\n    data[""correct_answers""][""c_large""] = c_large\n\n    d = 16\n    data[""params""][""d""] = d\n    data[""correct_answers""][""c_np""] = pl.to_json(np.int64(d), np_encoding_version=2)\n'}]","
description:

The `pl-integer-input` tag is an HTML custom element designed specifically for user input fields that require integer values. Its primary purpose is to facilitate the collection of integer data from users, ensuring that the input adheres to specified requirements, such as non-negativity and a predefined base for interpretation. This tag is particularly useful in educational contexts where correct numerical responses are critical, such as in mathematics or programming quizzes. It provides flexibility by allowing different numeral systems (binary, octal, decimal, hexadecimal) and ensures proper grading through strict input validation and stored attributes that enhance the interactivity of online assessments.

use_cases:
- Mathematics quizzes that require students to input integers for solving equations or problems, ensuring that responses are numerical and precise.
- Programming assignments where students need to input integer values as part of coding exercises, allowing grade automation based on the correctness of these inputs.
- Online assessments in data science courses asking about data types or numeric systems, where students may be required to convert or input integers in various bases.

example_questions:
- What is the value of $y$ when $x = 4$ and $y = 2x + 6$? Please enter your answer as an integer.
- If a binary number is given as $0b1101$, what is its decimal equivalent? Please enter your integer answer.
- What is the sum of $-3$ and $7$? Please enter the result as an integer.
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | — | Variable name to store data in. Note that this attribute has to be unique within a question, i.e., no value for this attribute should be repeated within a question.
 | integer | 1 | Weight to use when computing a weighted average score over elements.
 | boolean | false | Whether or not to display the statements in a fixed order; otherwise they are shuffled.
 | boolean | false | Whether or not to display the options in a fixed order; otherwise they are shuffled. See the details of
 | integer | special | The number of statements to display. Defaults to all statements.
 | integer | special | The number of options to display. Defaults to all options. The
 | boolean | false | Whether or not to add a ""None of the above"" to the end of the options.
 | boolean | true | Option to add blank dropdown entry as the default selection in each dropdown list.
 | boolean | false | Whether or not a blank submission is allowed. If this is set to true, a statement that selects the blank entry will be marked as incorrect instead of invalid.
 | ""decimal"" or ""lower-alpha"" or ""upper-alpha"" or ""full-text"" | ""lower-alpha"" | The type of counter to use when enumerating the options. If set to ""full-text"", the column of options will be hidden, and the text of each option will be used in the statements' dropdown lists, instead of counters.
 | boolean | false | Whether or not to hide the correct/incorrect score badge next to each graded answer choice.
 | ""right"" or ""bottom"" | ""right"" | The placement of options relative to the statements in order to make it visually cohesive. Especially useful when dealing with long statements or options.
Attribute | Type | Default | Description
----------------------------------------
 | string | — | Identifies the option as the correct response for this
Attribute | Type | Default | Description
----------------------------------------
 | string | special | A key used to match this option as the correct response to a
",{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/element/matching'},"<p>Given a list of statements, select a matching option for each entry from a dropdown list.</p>

<p>
  <img alt="""" src=""pl-matching.png""/>
</p>

<p>
  <strong>question.html</strong>
</p>

<strong>question.html</strong>
<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-matching answers-name=""string_value""&gt;
  &lt;pl-statement match=""Washington, D.C.""&gt;United States&lt;/pl-statement&gt;
  &lt;pl-statement match=""Mexico City""&gt;Mexico&lt;/pl-statement&gt;
  &lt;pl-statement match=""Paris""&gt;France&lt;/pl-statement&gt;

  &lt;pl-option&gt;New York City&lt;/pl-option&gt;
&lt;/pl-matching&gt;</code>
</pre>

<p>Inside the <code>pl-matching</code> element, a series of <code>pl-statement</code> and <code>pl-option</code> elements specify the questions the student must answer and the options to which they can be matched, respectively. Statements are displayed in the left column, and options in the right.</p>

<p>A total of <code>number-statements</code> statements will be randomly selected and displayed to the student. The corresponding matching options will be gathered; if <code>number-options</code> is larger than the number of options used by the selected statements, then random distractors will be selected from the remaining unused options. If the selected statements require more options than <code>number-options</code>, then <code>none-of-the-above</code> will automatically be set to true.</p>

<p>The content of a <code>pl-statement</code> can be any HTML element, including other PrairieLearn elements. A <code>pl-statement</code> must be specified with these attributes:</p>

<p>The content of a <code>pl-option</code> can be any HTML element, including other PrairieLearn elements. <code>pl-option</code> elements are optional; options are created by default based on the <code>match</code> attribute of each <code>pl-statement</code>. Additional <code>pl-option</code> elements can be added to serve as distractors (an option that is always incorrect, such as ""New York City"" in the example above), or to render formatted HTML/PrairieLearn elements instead of plain text (see the last question in the demo problem linked in the ""Example implementations"" below).</p>

<p>When the <code>fixed-options-order</code> feature is used, options are shown in the following order:</p>

<ol>
<li>Any explicitly-defined <code>pl-option</code> elements are shown first, in the order they are declared.</li>
<li>Any implicitly-defined options defined by a <code>pl-statement</code> <code>match</code> attribute are shown next, in the order they are declared.</li>
</ol>

<li>Any explicitly-defined <code>pl-option</code> elements are shown first, in the order they are declared.</li>

<li>Any implicitly-defined options defined by a <code>pl-statement</code> <code>match</code> attribute are shown next, in the order they are declared.</li>

<p>It is recommended to explicitly define <code>pl-option</code> elements when using <code>fixed-options-order</code> to have complete certainty on the order they will be shown.</p>

<p>A <code>pl-option</code> must be specified with these attributes:</p>

",pl-matching,"[{'question_html': '<pl-question-panel>\n    <p>\n        This question illustrates different use cases for the\n        <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-matching-element""><code>pl-matching</code></a>\n        element.\n        </p>\n</pl-question-panel>\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n        <p>\n            Example 1: Match each nation with its capital city. In this example, \n            the options are implicitly created by each statement\'s <code>match</code> attribute.\n            Only distractor options need to be added manually. All statements and options\n            are displayed by default.\n        </p>\n        </pl-question-panel>\n        \n        <pl-matching answers-name=""ex1"">\n            <pl-statement match=""Ottawa"">Canada</pl-statement>\n            <pl-statement match=""Washington, D.C."">United States</pl-statement>\n            <pl-statement match=""Mexico City"">Mexico</pl-statement>\n            <pl-statement match=""Paris"">France</pl-statement>\n            \n            <pl-option>Tijuana</pl-option>\n            <pl-option>Toronto</pl-option>\n            <pl-option>New York City</pl-option>\n        </pl-matching>\n    </div>\n</div>\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Example 2: Setting <code>counter-type=""full-text""</code> will hide the column of options. The dropdown list\n                next to each statement will contain the inner text of each option, rather than a counter.\n            </p>\n        </pl-question-panel>\n            \n        <pl-matching answers-name=""ex2"" counter-type=""full-text"">\n            <pl-statement match=""Matt""><pl-figure file-name=""matt.png"" width=""140px"" directory=""clientFilesQuestion""></pl-figure></pl-statement>\n            <pl-statement match=""Mariana""><pl-figure file-name=""mariana.png"" width=""140px"" directory=""clientFilesQuestion""></pl-figure></pl-statement>\n        </pl-matching>\n    </div>\n</div>\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Example 3: <code>blank=""false""</code> removes the blank first entry in the dropdown list, \n                setting the default selection to the first option.\n            </p>\n        </pl-question-panel>\n            \n        <pl-matching answers-name=""ex3"" blank=""false"">\n            <pl-statement match=""Ottawa"">Canada</pl-statement>\n            <pl-statement match=""Washington, D.C."">United States</pl-statement>\n            <pl-statement match=""Mexico City"">Mexico</pl-statement>\n            <pl-statement match=""Paris"">France</pl-statement>\n            \n            <pl-option>Tijuana</pl-option>\n            <pl-option>Toronto</pl-option>\n            <pl-option>New York City</pl-option>\n        </pl-matching>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Example 4: <code>number-statements</code> and <code>number-options</code>\n                determine how many statements and options are shown. Statements are sampled at random.\n                The options will always include each correct match for the sampled statements,\n                plus random distractors.\n            </p>\n        </pl-question-panel>\n            \n        <pl-matching answers-name=""ex4"" number-statements=""3"" number-options=""5"">\n            <pl-statement match=""Ottawa"">Canada</pl-statement>\n            <pl-statement match=""Washington, D.C."">United States</pl-statement>\n            <pl-statement match=""Mexico City"">Mexico</pl-statement>\n            <pl-statement match=""Paris"">France</pl-statement>\n            \n            <pl-option>Tijuana</pl-option>\n            <pl-option>Toronto</pl-option>\n            <pl-option>New York City</pl-option>\n        </pl-matching>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Example 5: if <code>number-options</code> is smaller than the amount of options\n                required to match the sampled statements, None of the Above will be added.\n            </p>\n        </pl-question-panel>\n            \n        <pl-matching answers-name=""ex5"" number-statements=""3"" number-options=""2"">\n            <pl-statement match=""Ottawa"">Canada</pl-statement>\n            <pl-statement match=""Washington, D.C."">United States</pl-statement>\n            <pl-statement match=""Mexico City"">Mexico</pl-statement>\n            <pl-statement match=""Paris"">France</pl-statement>\n            \n            <pl-option>Tijuana</pl-option>\n            <pl-option>Toronto</pl-option>\n            <pl-option>New York City</pl-option>\n        </pl-matching>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Example 6: the <code>counter-type</code> attribute indicates how options are identified. It can be set to <code>lower-alpha</code> (a, b, c, ...), <code>upper-alpha</code> (A, B, C, ...), or <code>decimal</code> (1, 2, 3).\n            </p>\n        </pl-question-panel>\n            \n        <pl-matching answers-name=""ex6"" counter-type=""decimal"" number-statements=""3"" number-options=""3"">\n            <pl-statement match=""Ottawa"">Canada</pl-statement>\n            <pl-statement match=""Washington, D.C."">United States</pl-statement>\n            <pl-statement match=""Mexico City"">Mexico</pl-statement>\n            <pl-statement match=""Paris"">France</pl-statement>\n            \n            <pl-option>Tijuana</pl-option>\n            <pl-option>Toronto</pl-option>\n            <pl-option>New York City</pl-option>\n        </pl-matching>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Example 7: options can be added manually if they require more than simple text.\n                All PrairieLearn and HTML elements are supported in options and statements.\n            </p>\n        </pl-question-panel>\n            \n        <pl-matching answers-name=""ex7"">\n            <pl-statement match=""Matt"">Matt</pl-statement>\n            <pl-statement match=""Mariana"">Mariana</pl-statement>\n            \n            <pl-option name=""Matt""><pl-figure file-name=""matt.png"" width=""140px"" directory=""clientFilesQuestion""></pl-figure></pl-option>\n            <pl-option name=""Mariana""><pl-figure file-name=""mariana.png"" width=""140px"" directory=""clientFilesQuestion""></pl-figure></pl-option>\n        </pl-matching>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Example 8: This example uses the `options-placement=""bottom""` argument. This is useful for questions with long statements and options, which may wrap over multiple lines or cause formatting issues in the default ""right"" placement.\n            </p>\n        </pl-question-panel>\n            \n        <pl-matching answers-name=""ex8"" options-placement=""bottom"">\n            <pl-statement match=""The theory of relativity"">Which theory revolutionized our understanding of space, time, and gravity?</pl-statement>\n            <pl-statement match=""Quantum mechanics"">What is a branch of physics that challenges classical intuition and underpins technologies like quantum computing?</pl-statement>\n            <pl-statement match=""Artificial intelligence"">What field of computer science encompasses machine learning, natural language processing, and computer vision?</pl-statement>\n            <pl-statement match=""Genetic engineering"">What biotechnology technique offers potential in treating genetic disorders and enhancing crop yields?</pl-statement>\n            \n            <pl-option>Traditional computing</pl-option>\n            <pl-option>Data science</pl-option>\n            <pl-option>OPERA faster-than-light neutrino anomaly</pl-option>\n            <pl-option>String theory</pl-option>\n        </pl-matching>\n    </div>\n</div>\n', 'server_file': 'import random\n\nimport numpy as np\nimport prairielearn as pl\n\n\ndef generate(data):\n    # Simulate values\n    a = random.randint(2, 10)\n    b = random.randint(2, 10)\n    a16 = random.randint(0xA, 0x1F)\n    b16 = random.randint(0xA, 0x1F)\n\n    # Compute answer\n    c = a + b\n    c16 = a16 + b16\n\n    # Release parameters\n    data[""params""][""a""] = a\n    data[""params""][""b""] = b\n\n    data[""params""][""a16""] = f""{a16:X}""\n    data[""params""][""b16""] = f""{b16:X}""\n\n    # Release correct answer\n    data[""correct_answers""][""c_1""] = c\n    data[""correct_answers""][""c_2""] = c\n    data[""correct_answers""][""c_4""] = str(c)\n    data[""correct_answers""][""c_5""] = str(c)\n    data[""correct_answers""][""c_7_b16""] = c16\n    data[""correct_answers""][""c_7_b2""] = c16\n\n    c_large = ""9007199254740991999""\n    data[""correct_answers""][""c_large""] = c_large\n\n    d = 16\n    data[""params""][""d""] = d\n    data[""correct_answers""][""c_np""] = pl.to_json(np.int64(d), np_encoding_version=2)\n'}]","
description:

The `<pl-matching>` HTML tag is designed to facilitate the creation of interactive matching questions in online quizzes. It allows instructors to present a list of statements alongside a set of options from which students can select the correct match for each statement via a dropdown. This tag is particularly useful in contexts where associative learning is applied, such as geography, vocabulary, or historical facts, enabling students to demonstrate their understanding of relationships between various items. When implementing this tag, one can leverage various attributes to customize the questions, including specifying the number of statements and options, controlling their order, and including distractors to enhance the difficulty of the quiz.

use_cases:
- In a geography quiz, students can match capitals to their respective countries to reinforce learning about world geography.
- In a language learning context, students can match vocabulary words to their definitions to aid in vocabulary retention and understanding.
- In a history lesson, students can match historical events to the corresponding dates or figures, promoting a deeper understanding of historical timelines.

example_questions:
- Match the following countries with their respective capitals: 1. Canada, 2. Japan, 3. Brazil.
- Identify the correct matching terms: 1. Photosynthesis, 2. Mitosis, 3. Erosion.
- Match the following historical figures to their contributions: 1. Albert Einstein, 2. Marie Curie, 3. Isaac Newton.
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | — | Variable name to store data in. Note that this attribute has to be unique within a question, i.e., no value for this attribute should be repeated within a question.
 | integer | 1 | Weight to use when computing a weighted average score over elements.
 | text | — | A prefix to display before the input box (e.g.,
 | ""relabs"", ""sigfig"", or ""decdig"" | ""relabs"" | How to grade. ""relabs"" uses relative (""rtol"") and absolute (""atol"") tolerances. ""sigfig"" and ""decdig"" use ""digits"" significant or decimal digits.
 | number | 1e-2 | Relative tolerance for
 | number | 1e-8 | Absolute tolerance for
 | integer | 2 | number of digits that must be correct for
 | boolean | false | Whether or not to allow credit for each correct matrix component. By default, the variable is graded as correct only when all matrix components are correct.
 | boolean |  | Whether or not to allow feedback indicating which matrix components are incorrect. The default value of
 | boolean | true | Whether to allow answers expressed as a rational number of the format
 | boolean | false | Whether or not empty input boxes are allowed. By default, matrices with at least one empty input box will not be graded (invalid format).
 | string | 0 (zero) | Value to be used as an answer for each individual component if the component is left blank. Only applied if
",{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/element/matrixComponentInput'},"<p>A <code>pl-matrix-component-input</code> element displays a grid of input fields with
the same shape of the variable stored in <code>answers-name</code>
(only 2D arrays of real numbers can be stored in <code>answers-name</code>).</p>

<p>
  <img alt="""" src=""pl-matrix-component-input.png""/>
</p>

<p>
  <strong>question.html</strong>
</p>

<strong>question.html</strong>
<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-matrix-component-input answers-name=""matrixA"" label=""$A=$""&gt;&lt;/pl-matrix-component-input&gt;</code>
</pre>

<p>
  <strong>server.py</strong>
</p>

<strong>server.py</strong>
<pre class=""highlight"">
  <code class=""language-python"">import prairielearn as pl
import numpy as np

def generate(data):

    # Generate a random 3x3 matrix
    mat = np.random.random((3, 3))

    # Answer to each matrix entry converted to JSON
    data[""correct_answers""][""matrixA""] = pl.to_json(mat)</code>
</pre>

<p>The question will only be graded when all matrix components are entered, unless the <code>allow-blank</code> attribute is enabled.</p>

",pl-matrix-component-input,"[{'question_html': '<pl-question-panel>\n    <p>\n        Suppose ${\\bf x}$ is the following array:\n    </p>\n    <pl-variable-output digits=""0"">\n        <pl-variable params_name=""x"">x</pl-variable>\n    </pl-variable-output>\n</pl-question-panel>\n\n<div class=""mb-2"">\n    <h5>\n    1.\n    </h5>\n    <pl-question-panel>\n        <p>\n            Enter the components of ${\\bf x}$.\n            The attribute <code>allow-partial-credit=""true""</code> is used, so each correct entry receives a partial score.\n            By default, when <code>allow-partial-credit=""true""</code>, the attribute <code>allow-feedback</code> is also set to <code>true</code>,\n            and hence the submission panel indicates which entries are incorrect.\n        </p>\n    </pl-question-panel>\n\n    <pl-matrix-component-input answers-name=""out3"" label=""${\\bf x} = $"" comparison=""relabs"" atol=""0"" rtol=""1e-6"" allow-partial-credit=""true"">\n    </pl-matrix-component-input>\n</div>\n\n<pl-question-panel>\n    <hr>\n    <p>\n        Suppose ${\\bf A}$ is the following array:\n    </p>\n    <pl-variable-output digits=""{{params.sf}}"">\n        <pl-variable params_name=""in"">A</pl-variable>\n    </pl-variable-output>\n</pl-question-panel>\n\n<div class=""mb-2"">\n    <h5>\n    2.\n    </h5>\n    <pl-question-panel>\n        <p>\n            Enter the components of ${\\bf A}$. To get the answer correct, all entries need to be correct.\n        </p>\n    </pl-question-panel>\n\n    <pl-matrix-component-input answers-name=""out1"" label=""${\\bf A} = $"" comparison=""sigfig"" digits=""{{params.sf}}"">\n    </pl-matrix-component-input>\n</div>\n\n<div class=""mb-2"">\n    <h5>\n    3.\n    </h5>\n    <pl-question-panel>\n        <p>\n            Enter the components of ${\\bf A}$. Here we use <code>allow-partial-credit=""true""</code>\n            and <code>allow-feedback=""false""</code>. Hence, each correct entry receives a partial score, but the submission panel\n            does not indicate which entries are incorrect.\n        </p>\n    </pl-question-panel>\n\n    <pl-matrix-component-input answers-name=""out2"" label=""${\\bf A} = $"" comparison=""sigfig"" digits=""{{params.sf}}"" allow-partial-credit=""true"" allow-feedback=""false"">\n    </pl-matrix-component-input>\n</div>\n\n<div class=""mb-2"">\n    <h5>\n        4.\n    </h5>\n    <pl-question-panel>\n        <p>\n            This is a very long vector, it should be able to scroll.  Enter the vector whose values are increasing integers in the range $1$ to $20$ (inclusive).\n        </p>\n    </pl-question-panel>\n     <pl-matrix-component-input answers-name=""out4"" label=""${\\bf x} = $"" comparison=""relabs"" atol=""0"" rtol=""1e-6"" allow-partial-credit=""true"">\n    </pl-matrix-component-input>\n</div>\n\n<div class=""mb-2"" >\n    <h5>\n        5.\n    </h5>\n    <pl-question-panel>\n        <p>\n            Enter the vector\n            $${\\bf y} = \\begin{bmatrix} \\frac{1}{2} & \\frac{1}{4} & \\frac{1}{8} & \\frac{1}{16} \\end{bmatrix}$$\n            With the attribute <code>allow-fractions=""true""</code> (which is true by default), entries can be submitted as the quotient of two decimal numbers.\n        </p>\n    </pl-question-panel>\n    <pl-matrix-component-input answers-name=""out5"" label=""${\\bf y} = $"" allow-partial-credit=""true"">\n    </pl-matrix-component-input>\n</div>\n\n<div class=""mb-2"" >\n    <h5>\n        6.\n    </h5>\n    <pl-question-panel>\n        <p>\n            Enter the identity matrix.\n            With the attribute <code>allow-blank=""true""</code> (which is false by default), entries can be left blank to represent a zero, so you may leave the elements with a zero blank.\n        </p>\n    </pl-question-panel>\n    <pl-matrix-component-input answers-name=""out6"" label=""${\\bf I} = $"" allow-blank=""true"">\n    </pl-matrix-component-input>\n</div>\n', 'server_file': 'import numpy as np\nimport prairielearn as pl\n\n\ndef generate(data):\n    N = 2\n    A = np.random.rand(N, N)\n    sf = 2\n    B = np.round(A, sf)\n    x = np.array([[1, 2, 3, 4]])\n    long_matrix = np.arange(1, 21).reshape((1, 20))\n    y = (2.0 ** -np.arange(1, 5)).reshape((1, 4))\n    I = np.array([[1, 0, 0], [0, 1, 0], [0, 0, 1]])\n\n    data[""params""][""sf""] = sf\n    data[""params""][""in""] = pl.to_json(B)\n    data[""params""][""x""] = pl.to_json(x)\n\n    data[""correct_answers""][""out1""] = pl.to_json(B)\n    data[""correct_answers""][""out2""] = pl.to_json(B)\n    data[""correct_answers""][""out3""] = pl.to_json(x)\n    data[""correct_answers""][""out4""] = pl.to_json(long_matrix)\n    data[""correct_answers""][""out5""] = pl.to_json(y)\n    data[""correct_answers""][""out6""] = pl.to_json(I)\n'}]","
description:

The <code>pl-matrix-component-input</code> HTML tag is designed to create an interactive grid of input fields that mirrors the shape of a specified two-dimensional array. This tag consolidates input collection for matrix-related questions in educational contexts. It is particularly useful when educators need students to fill in values for each component of a matrix, as it enforces structure and proper formatting of answers. The tag allows for integrated feedback based on correctness, tolerances, and grading flexibility, ensuring that users can effectively assess comprehension of matrix concepts in a cohesive manner.

use_cases:
- In a mathematics course where students are required to solve systems of equations, the tag can be utilized for questions requiring input of coefficients in a matrix format.
- In a statistics course, the tag can create visual inputs for students to enter elements of a covariance matrix, facilitating hands-on learning of key concepts.
- When teaching programming involving matrix manipulations, the tag can serve as an interface for students to input numeric data for testing their algorithms directly in an online quiz.

example_questions:
- Given the matrix $A$ below, input the elements: $A = \begin{pmatrix} \_ & \_ & \_ \\ \_ & \_ & \_ \\ \_ & \_ & \_ \end{pmatrix}$.
- Input the elements of the 2x2 matrix $B$ that represents the transformation: $B = \begin{pmatrix} \_ & \_ \\ \_ & \_ \end{pmatrix}$.
- For the given matrix $C = \begin{pmatrix} \_ & \_ \\ \_ & \_ \end{pmatrix}$, calculate the determinant and provide the values in the matrix.
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | — | Variable name to store data in. Note that this attribute has to be unique within a question, i.e., no value for this attribute should be repeated within a question.
 | integer | 1 | Weight to use when computing a weighted average score over elements.
 | text | — | A prefix to display before the input box (e.g.,
 | ""relabs"", ""sigfig"", or ""decdig"" | ""relabs"" | How to grade. ""relabs"" uses relative (""rtol"") and absolute (""atol"") tolerances. ""sigfig"" and ""decdig"" use ""digits"" significant or decimal digits.
 | number | 1e-2 | Relative tolerance for
 | number | 1e-8 | Absolute tolerance for
 | integer | 2 | number of digits that must be correct for
 | boolean | false | Whether or not to allow complex numbers as answers. If the correct answer
 | boolean | true | Show the question mark at the end of the input displaying required input parameters.
",{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/matrixComplexAlgebra'},"<p>A <code>pl-matrix-input</code> element displays an input field that accepts a matrix
(i.e., a 2-D array) expressed in a supported programming language
format (either MATLAB or Python's numpy).</p>

<p>
  <img alt="""" src=""pl-matrix-input.png""/>
</p>

<p>
  <strong>question.html</strong>
</p>

<strong>question.html</strong>
<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-matrix-input answers-name=""matrixB"" label=""$B=$""&gt;&lt;/pl-matrix-input&gt;</code>
</pre>

<p>
  <strong>server.py</strong>
</p>

<strong>server.py</strong>
<pre class=""highlight"">
  <code class=""language-python"">import prairielearn as pl
import numpy as np

def generate(data):
    # Randomly generate a 2x2 matrix
    matrixB = np.random.random((2, 2))

    # Answer exported to question.
    data[""correct_answers""][""matrixB""] = pl.to_json(matrixB)</code>
</pre>

<p><code>pl-matrix-input</code> parses a matrix entered in either <code>MATLAB</code> or <code>Python</code> formats.
The following are valid input format options:</p>

<p>
  <strong>MATLAB format:</strong>
</p>

<strong>MATLAB format:</strong>
<pre class=""highlight"">
  <code>[1.23; 4.56]</code>
</pre>

<p>
  <strong>Python format:</strong>
</p>

<strong>Python format:</strong>
<pre class=""highlight"">
  <code>[[1.23], [4.56]]</code>
</pre>

<p><strong>Note:</strong> A scalar will be accepted either as a matrix of size 1 x 1 (e.g., <code>[1.23]</code> or <code>[[1.23]]</code>) or just as a single number (e.g., <code>1.23</code>).</p>

<strong>Note:</strong> A scalar will be accepted either as a matrix of size 1 x 1 (e.g., 
<p>In the answer panel, a <code>pl-matrix-input</code> element displays the correct answer, allowing the user to switch between matlab and python format.</p>

<p>In the submission panel, a <code>pl-matrix-input</code> element displays either the submitted answer (in the same format that it was submitted, either MATLAB or Python), or a note that the submitted answer was invalid (with an explanation of why).</p>

",pl-matrix-input,"[{'question_html': '<pl-question-panel>\n<p>\nTwo matrices $A$ and $B$ are given as follows:\n</p>\n<pl-variable-output>\n    <pl-variable params-name=""A"">A</pl-variable>\n    <pl-variable params-name=""B"">B</pl-variable>\n</pl-variable-output>\n<p>\nFind the product of these two matrices:\n</p>\n</pl-question-panel>\n\n<pl-matrix-input answers-name=""C"" comparison=""relabs"" label=""$AB=$"" allow-complex=""true""></pl-matrix-input>\n', 'server_file': 'import numpy as np\nimport prairielearn as pl\n\n\ndef generate(data):\n    # Dimensions\n    nInnerMin = 2\n    nMax = 5\n    nRows = np.random.randint(1, nMax + 1)\n    nInner = np.random.randint(nInnerMin, nMax + 1)\n    nCols = np.random.randint(1, nMax + 1)\n\n    # Number of digits after the decimal\n    nDigits = 1\n\n    # Range of entries\n    numMax = 10\n\n    # The two matrices to be multiplied\n    Are = np.random.random_integers(-numMax, numMax, (nRows, nInner)) / (10**nDigits)\n    Aim = np.random.random_integers(-numMax, numMax, (nRows, nInner)) / (10**nDigits)\n    Bre = np.random.random_integers(-numMax, numMax, (nInner, nCols)) / (10**nDigits)\n    Bim = np.random.random_integers(-numMax, numMax, (nInner, nCols)) / (10**nDigits)\n    A = Are + Aim * 1j\n    B = Bre + Bim * 1j\n\n    # Product of these two matrices\n    C = A.dot(B)\n\n    # Modify data and return\n    data[""params""][""A""] = pl.to_json(A)\n    data[""params""][""B""] = pl.to_json(B)\n    data[""correct_answers""][""C""] = pl.to_json(C)\n'}]","
description:

The `pl-matrix-input` HTML tag is designed to facilitate the input of matrix data within an online learning environment, explicitly tailored for educational contexts. Its primary function is to allow students to enter matrix data in one of two programming formats: MATLAB or Python's numpy. This is particularly useful in courses that involve numerical methods, linear algebra, or data analysis, where students frequently work with matrices. By using this tag, educators can create interactive quizzes or assignments where students must provide valid matrix representations, which can then be automatically validated and graded according to specified criteria.

use_cases:
- In a linear algebra course where students are required to input the coefficients of a matrix for performing operations like solving linear equations or calculating determinants.
- In a data science module where students must input data matrices to apply machine learning algorithms, thus reinforcing their programming skills alongside theoretical knowledge.
- In a calculus or numerical analysis course where students must input matrices when discussing or implementing methods such as matrix exponentiation or eigenvalue decomposition.

example_questions:
- Given the matrix A = [[1, 2], [3, 4]], compute the matrix B = A^2 and enter your result in the format: $B=$ for your answer.
- Input the 2x2 identity matrix in both MATLAB and Python formats as required: $I=$
- Enter a 2D array that represents the transformation of a 2D point from Cartesian to Polar coordinates, using the expected format for your answer: $P=$.
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | — | Variable name to store data in. Note that this attribute has to be unique within a question, i.e., no value for this attribute should be repeated within a question.
 | integer | 1 | Weight to use when computing a weighted average score over elements.
 | ""block"", ""inline"", or ""dropdown"" | ""block"" | Display option for the input field. Block and inline display answer choices as radio buttons, while dropdown presents option as a dropdown.
 | integer | special | The total number of answer choices to display. Defaults to displaying one correct answer and all incorrect answers.
 | ""random"", ""ascend"", ""descend"", or ""fixed"" | ""random"" | Order to display answer choices. Fixed order displays choices in the same order as the original source file.
 | boolean | false | Hide the letter keys in the answer list, i.e., (a), (b), (c), etc.
 | ""false"", ""random"", ""correct"", ""incorrect"" | ""false"" | Add ""All of the above"" choice. See below for details.
 | ""false"", ""random"", ""correct"", or ""incorrect"" | ""false"" | Add ""None of the above"" choice. See below for details.
 | string | — | Helper text to be displayed to the student next to the
 | string | — | Helper text to be displayed to the student next to the
 | boolean | false | Whether or not an empty submission is allowed. If
 | integer | - | Manually set the size of the dropdown to a fixed width. The default behavior is to make the dropdown as wide as the widest option. Should only be used with
Attribute | Type | Default | Description
----------------------------------------
 | boolean | false | Is this a correct answer to the question?
 | string | — | Helper text (HTML) to be displayed to the student next to the option after question is graded if this option has been selected by the student.
 | float | — | Score given to answer choice if selected by student. Defaults to 1.0 for correct answers and 0.0 for incorrect answers.
","{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/randomMultipleChoice', 'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/element/multipleChoice'}","<p>A <code>pl-multiple-choice</code> element selects <strong>one</strong> correct answer and zero or more
incorrect answers and displays them in a random order as radio buttons.
Duplicate answer choices (string equivalents) are not permitted in the
<code>pl-multiple-choice</code> element, and an exception will be raised upon question
generation if two (or more) choices are identical.</p>

<p>
  <img alt="""" src=""pl-multiple-choice.png""/>
</p>

<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-multiple-choice answers-name=""acc"" weight=""1""&gt;
  &lt;pl-answer correct=""false""&gt;positive&lt;/pl-answer&gt;
  &lt;pl-answer correct=""true""&gt;negative&lt;/pl-answer&gt;
  &lt;pl-answer correct=""false""&gt;zero&lt;/pl-answer&gt;
&lt;/pl-multiple-choice&gt;</code>
</pre>

<p>The attributes <code>none-of-the-above</code> and <code>all-of-the-above</code> can be set to one of these values:</p>

<ul>
<li><code>false</code>: the corresponding choice will not be shown in the list of choices. This is the default.</li>
<li><code>random</code>: the corresponding choice will always be shown, and will be randomly correct, with probability proportional to the total number of correct choices. In other words, if there are <code>N</code> possible correct choices in total, this choice will be correct with probability <code>1/N</code>.</li>
<li><code>correct</code>: the corresponding choice will always be shown and will always be the correct answer.</li>
<li><code>incorrect</code>: the corresponding choice will always be shown and will always be an incorrect answer (i.e., a distractor).</li>
</ul>

<li><code>false</code>: the corresponding choice will not be shown in the list of choices. This is the default.</li>

<li><code>random</code>: the corresponding choice will always be shown, and will be randomly correct, with probability proportional to the total number of correct choices. In other words, if there are <code>N</code> possible correct choices in total, this choice will be correct with probability <code>1/N</code>.</li>

<li><code>correct</code>: the corresponding choice will always be shown and will always be the correct answer.</li>

<li><code>incorrect</code>: the corresponding choice will always be shown and will always be an incorrect answer (i.e., a distractor).</li>

<p>
  <strong>Notes</strong>
</p>

<strong>Notes</strong>
<ul>
<li>""All of the above"" and ""None of the above"", if set, are bounded by the <code>number-answers</code> value above. Also, these two values are always shown as the last choices, regardless of the setting for <code>fixed-order</code>. If both choices are shown, then ""All of the above"" will be listed before ""None of the above"".</li>
<li>Defining answer choices with external JSON files via the <code>external-json</code> attribute is now deprecated.</li>
</ul>

<li>""All of the above"" and ""None of the above"", if set, are bounded by the <code>number-answers</code> value above. Also, these two values are always shown as the last choices, regardless of the setting for <code>fixed-order</code>. If both choices are shown, then ""All of the above"" will be listed before ""None of the above"".</li>

<li>Defining answer choices with external JSON files via the <code>external-json</code> attribute is now deprecated.</li>

<p>Inside the <code>pl-multiple-choice</code> element, each choice must be specified with
a <code>pl-answer</code> that has attributes:</p>

",pl-multiple-choice,"[{'question_html': '<pl-question-panel>\n<p>\nA ball with mass $m ={{params.m}}\\rm\\ kg$ is thrown downward from the top of a building with height $h = {{params.h}}\\rm\\ m$ and initial speed $v_0$ at an angle $\\theta$ with respect to the horizontal as shown in the figure. The $x$-component of the initial velocity $v_{x0} = {{params.v0x}}\\rm\\ m/s$, and the ball hits the ground a distance $d = {{params.d}}\\rm\\ m$ from the building as shown in the figure.\n</p>\n\n<pl-figure file-name=""BallToss2.png"" width=""250px""></pl-figure>\n</pl-question-panel>\n\n<pl-question-panel>\n  <hr>\n</pl-question-panel>\n\n<pl-question-panel>\n    <p>How long is the ball in the air?</p>\n</pl-question-panel>\n<pl-multiple-choice answers-name=""t"" none-of-the-above=""true"" weight=""1"">\n  <pl-answer correct=""true"">\n    $t = {{params.t_c}}\\rm\\ s$\n  </pl-answer>\n  <pl-answer correct=""false"">\n    $t = {{params.t_x1}}\\rm\\ s$\n  </pl-answer>\n  <pl-answer correct=""false"">\n    $t = {{params.t_x2}}\\rm\\ s$\n  </pl-answer>\n  <pl-answer correct=""false"">\n    $t = {{params.t_x3}}\\rm\\ s$\n  </pl-answer>\n</pl-multiple-choice>\n', 'server_file': 'import math\nimport random\n\n\ndef generate(data):\n    m = random.choice([3, 1.4, 1.6, 1.8])\n    h = random.choice([4, 12, 14, 16])\n    d = 1.5 * h\n    g = 9.8\n    v0xmin = d * math.sqrt(g / (2 * h))\n    v0x = round(random.choice([4, v0xmin * 1.4, v0xmin * 1.6, v0xmin * 1.8]), 3)\n\n    data[""params""][""m""] = m\n    data[""params""][""h""] = h\n    data[""params""][""d""] = d\n    data[""params""][""v0x""] = v0x\n\n    t = d / v0x\n\n    data[""params""][""t_c""] = round(t, 3)\n    data[""params""][""t_x1""] = round(math.sqrt(2 * h / g), 3)\n    data[""params""][""t_x2""] = round(v0x * 2 / g, 3)\n    data[""params""][""t_x3""] = round(h / m, 3)\n\n    v0y = 0.5 * g * t - h / t\n\n    data[""params""][""vy_c""] = round(v0y, 2)\n    data[""params""][""vy_x1""] = round(-math.sqrt((g * t) ** 2 + v0x**2 / 2), 2)\n    data[""params""][""vy_x2""] = round(-0.5 * g * t - h / 2, 2)\n    data[""params""][""vy_x3""] = round(-math.sqrt(v0x**2 + v0y**2), 2)\n    data[""params""][""vy_x4""] = 0\n'}, {'question_html': '<pl-question-panel>\n  <p>\n    Questions below were designed to showcase the different features of\n    <a\n      href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-multiple-choice-element""><code>pl-multiple-choice</code></a>.\n    The goal of\n    <a\n      href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-multiple-choice-element""><code>pl-multiple-choice</code></a>\n    is to allow users to select a <b>single option</b> from a list of choices. To allow for more\n    than one option, please consider using\n    <a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-checkbox-element""><code>pl-checkbox</code></a>.\n  </p>\n</pl-question-panel>\n\n<div class=""card my-2"">\n  <div class=""card-header"">Part 1</div>\n\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        Here, you can observe the default behavior of the <code>pl-multiple-choice</code> element.\n        In particular, all options are presented in a randomized form. Only one option may be\n        selected from the list.\n      </p>\n      <p>What is the color of the sky?</p>\n    </pl-question-panel>\n\n    <pl-multiple-choice answers-name=""sky-color1"">\n      <pl-answer correct=""true"">Blue</pl-answer>\n      <pl-answer>Pink</pl-answer>\n      <pl-answer>Purple</pl-answer>\n      <pl-answer>Orange</pl-answer>\n      <pl-answer>Yellow</pl-answer>\n      <pl-answer>Brown</pl-answer>\n      <pl-answer>Red</pl-answer>\n    </pl-multiple-choice>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-header"">Part 2</div>\n\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        Here, the <code>pl-multiple-choice</code> element is restricted to displaying\n        <b>4</b> choices with one of the choices being the correct answer. In addition, the choices\n        are placed ""inline"" instead of being displayed within a list. We also set\n        <code>hide-score-badge=""True""</code> to hide the partial score percentage and badge.\n      </p>\n\n      <p>What is the color of the sky?</p>\n    </pl-question-panel>\n\n    <pl-multiple-choice answers-name=""sky-color2"" number-answers=""4"" display=""inline"" hide-score-badge=""True"">\n      <pl-answer correct=""true"">Blue</pl-answer>\n      <pl-answer>Pink</pl-answer>\n      <pl-answer>Purple</pl-answer>\n      <pl-answer>Orange</pl-answer>\n      <pl-answer>Yellow</pl-answer>\n      <pl-answer>Brown</pl-answer>\n      <pl-answer>Red</pl-answer>\n    </pl-multiple-choice>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-header"">Part 3</div>\n\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        Here, the <code>pl-multiple-choice</code> element displays options as they were written,\n        e.g. <code>order=""fixed""</code>, which means there is no randomization of choices.\n        Moreover, the weight of this question has also been increased meaning it will contribute\n        more to the overall score than other elements.\n      </p>\n      <p>What is the color of the sky?</p>\n    </pl-question-panel>\n\n    <pl-multiple-choice answers-name=""sky-color3"" order=""fixed"" weight=""3"">\n      <pl-answer correct=""true"">Blue</pl-answer>\n      <pl-answer>Pink</pl-answer>\n      <pl-answer>Purple</pl-answer>\n      <pl-answer>Orange</pl-answer>\n      <pl-answer>Yellow</pl-answer>\n      <pl-answer>Brown</pl-answer>\n      <pl-answer>Red</pl-answer>\n    </pl-multiple-choice>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-header"">Part 4</div>\n\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        Here, letter keys are hidden with <code>hide-letter-keys=""true""</code>. This option is\n        especially useful when the answer options themselves are letters.\n      </p>\n\n      <p>What is the color of the sky?</p>\n    </pl-question-panel>\n\n    <pl-multiple-choice answers-name=""sky-color4"" hide-letter-keys=""true"">\n      <pl-answer correct=""true"">Blue</pl-answer>\n      <pl-answer>Pink</pl-answer>\n      <pl-answer>Purple</pl-answer>\n      <pl-answer>Orange</pl-answer>\n      <pl-answer>Yellow</pl-answer>\n      <pl-answer>Brown</pl-answer>\n      <pl-answer>Red</pl-answer>\n    </pl-multiple-choice>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-header"">Part 5</div>\n\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        Here, the <code>pl-multiple-choice</code> element displays ""All of the above"" and ""None of\n        the above"" as options below the correct and incorrect options provided. By setting these\n        options to <code>""random""</code>, the options could be correct with the same probability as\n        all of the individual correct options. The number of options displayed is also consistent\n        across all variants, and is determined automatically if <code>number-answers</code> is not\n        set.\n      </p>\n\n      <p>What is the color of the sky?</p>\n    </pl-question-panel>\n\n    <pl-multiple-choice answers-name=""sky-color5"" none-of-the-above=""random"" all-of-the-above=""random"">\n      <pl-answer correct=""true"">Blue</pl-answer>\n      <pl-answer correct=""true"">Dark Blue</pl-answer>\n      <pl-answer correct=""true"">Light Blue</pl-answer>\n      <pl-answer correct=""true"">Clear Blue</pl-answer>\n      <pl-answer>Pink</pl-answer>\n      <pl-answer>Purple</pl-answer>\n      <pl-answer>Orange</pl-answer>\n      <pl-answer>Yellow</pl-answer>\n      <pl-answer>Brown</pl-answer>\n      <pl-answer>Red</pl-answer>\n    </pl-multiple-choice>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-header"">Part 6</div>\n\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        The options for ""All of the above"" and ""None of the above"" can also be set to always be\n        incorrect (i.e., a distractor).\n      </p>\n\n      <p>What is the color of the sky?</p>\n    </pl-question-panel>\n\n    <pl-multiple-choice answers-name=""sky-color6"" none-of-the-above=""incorrect"" all-of-the-above=""incorrect"">\n      <pl-answer correct=""true"">Blue</pl-answer>\n      <pl-answer correct=""true"">Dark Blue</pl-answer>\n      <pl-answer correct=""true"">Light Blue</pl-answer>\n      <pl-answer correct=""true"">Clear Blue</pl-answer>\n      <pl-answer>Pink</pl-answer>\n      <pl-answer>Purple</pl-answer>\n      <pl-answer>Orange</pl-answer>\n      <pl-answer>Yellow</pl-answer>\n      <pl-answer>Brown</pl-answer>\n      <pl-answer>Red</pl-answer>\n    </pl-multiple-choice>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-header"">Part 7</div>\n\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        Here, you can observe the behavior of the <code>feedback</code> attribute in\n        <code>pl-answer</code>. Feedback is expected to convey a small piece of information that\n        explains why an answer is correct or incorrect. When an answer with a feedback setting is\n        selected and graded, a small box containing the feedback is displayed next to the answer.\n      </p>\n\n      <p>What is the color of the sky?</p>\n    </pl-question-panel>\n\n    <pl-multiple-choice answers-name=""sky-color8"">\n      <pl-answer correct=""true"" feedback=""Correct! The sky is indeed blue."">Blue</pl-answer>\n      <pl-answer feedback=""Incorrect. The sky is not pink."">Pink</pl-answer>\n      <pl-answer feedback=""Incorrect. The sky is not purple."">Purple</pl-answer>\n      <pl-answer feedback=""Incorrect. The sky is not orange"">Orange</pl-answer>\n      <pl-answer feedback=""Incorrect. The sky is not yellow."">Yellow</pl-answer>\n      <pl-answer feedback=""Incorrect. The sky is not brown."">Brown</pl-answer>\n      <pl-answer feedback=""Incorrect. The sky is not red."">Red</pl-answer>\n    </pl-multiple-choice>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-header"">\n    Part 8\n  </div>\n\n  <div class=""card-body"">\n\n    <pl-question-panel>\n      <p>Here, you can observe the behavior of the <code>score</code> attribute in <code>pl-answer</code>.\n        The score for a question the percentage of points given to it if selected (default is 0 for\n        incorrect answers and 1 for correct ones). This also allows no submission by the student, done by\n        setting <code>allow-blank=""true""</code>.</p>\n      <p> What is the color of the sky? </p>\n    </pl-question-panel>\n\n    <pl-multiple-choice answers-name=""sky-color9"" allow-blank=""true"">\n      <pl-answer correct=""true"" feedback=""Correct! The sky is indeed blue."">Blue</pl-answer>\n      <pl-answer>Pink</pl-answer>\n      <pl-answer score=0.5>Purple</pl-answer>\n      <pl-answer feedback=""Not quite"" score=0.1>Orange</pl-answer>\n      <pl-answer>Yellow</pl-answer>\n      <pl-answer score=0.3>Brown</pl-answer>\n      <pl-answer score=0.2>Red</pl-answer>\n    </pl-multiple-choice>\n  </div>\n</div>\n\n<div class=""card my-2"">\n  <div class=""card-header"">Part 9</div>\n\n  <div class=""card-body"">\n    <pl-question-panel>\n      <p>\n        Here, we observe the dropdown display option. This lets students input an answer from a\n        dropdown list instead of choosing from multiple choice radio buttons. Note that the\n        dropdown list supports $\\LaTeX$ rendering. We have also set <code>size=""25""</code> to\n        keep the display a fixed size.\n      </p>\n\n      <p>What is the color of the sky?</p>\n    </pl-question-panel>\n\n    <p>\n      The sky is\n      <pl-multiple-choice answers-name=""sky-color10"" display=""dropdown"" allow-blank=""true"" order=""random"" size=""25"">\n        <pl-answer correct=""true"" feedback=""Correct! The sky is indeed blue."">Blue ($470nm$)</pl-answer>\n        <pl-answer score=""0.5"">Purple ($400nm$)</pl-answer>\n        <pl-answer feedback=""Hint: The correct answer is a complementary color to this one."" score=""0.1"">\n          Orange ($600nm$)\n        </pl-answer>\n        <pl-answer>Yellow ($580nm$)</pl-answer>\n        <pl-answer score=""0.3"">Green ($520nm$)</pl-answer>\n        <pl-answer score=""0.2"">Red ($700nm$)</pl-answer>\n      </pl-multiple-choice>.\n      This is because of the way that light is scattered in the earth\'s atmosphere.\n    </p>\n  </div>\n</div>\n', 'server_file': 'import math\nimport random\n\n\ndef generate(data):\n    m = random.choice([3, 1.4, 1.6, 1.8])\n    h = random.choice([4, 12, 14, 16])\n    d = 1.5 * h\n    g = 9.8\n    v0xmin = d * math.sqrt(g / (2 * h))\n    v0x = round(random.choice([4, v0xmin * 1.4, v0xmin * 1.6, v0xmin * 1.8]), 3)\n\n    data[""params""][""m""] = m\n    data[""params""][""h""] = h\n    data[""params""][""d""] = d\n    data[""params""][""v0x""] = v0x\n\n    t = d / v0x\n\n    data[""params""][""t_c""] = round(t, 3)\n    data[""params""][""t_x1""] = round(math.sqrt(2 * h / g), 3)\n    data[""params""][""t_x2""] = round(v0x * 2 / g, 3)\n    data[""params""][""t_x3""] = round(h / m, 3)\n\n    v0y = 0.5 * g * t - h / t\n\n    data[""params""][""vy_c""] = round(v0y, 2)\n    data[""params""][""vy_x1""] = round(-math.sqrt((g * t) ** 2 + v0x**2 / 2), 2)\n    data[""params""][""vy_x2""] = round(-0.5 * g * t - h / 2, 2)\n    data[""params""][""vy_x3""] = round(-math.sqrt(v0x**2 + v0y**2), 2)\n    data[""params""][""vy_x4""] = 0\n'}]","
description:

The `pl-multiple-choice` HTML tag is designed for use in educational contexts where a question requires students to select one correct answer from a set of possible options, which are displayed as radio buttons in a random order. This tag is particularly useful for creating quizzes and assessments where the randomization of answer choices can help to prevent cheating and enhance the assessment experience. It ensures that there are no duplicate answer options and allows for both correct and incorrect answers to be specified clearly, making it effective for both formative and summative assessments.

use_cases:
- Creating a quiz question that assesses students' understanding of key concepts, where a single correct answer must be selected among distractors, ensuring clarity and fairness in assessment.
- Using the `pl-multiple-choice` in an online learning platform to facilitate interactive learning, where students can practice by answering randomly presented questions without the risk of memorizing the order of answers.
- Incorporating the tag into a digital exam system that supports randomization of answers to minimize the chances of answer sharing among students during timed assessments.

example_questions:
- What is the primary function of mitochondria in a cell? 
 - positive (false) 
 - negative (true) 
 - zero (false)
- Which of the following statements about water is correct? 
 - It is a universal solvent (true) 
 - It is found only in liquid form (false) 
 - It has a high boiling point (false)
- Select the state of matter that has a definite shape and volume: 
 - Liquid (false) 
 - Gas (false) 
 - Solid (true)
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | — | Variable name to store data in. Note that this attribute has to be unique within a question, i.e., no value for this attribute should be repeated within a question.
 | integer | 1 | Weight to use when computing a weighted average score over all elements in a question.
 | string | ""ordered"" | One of the following:
 | boolean | false | Whether or not an empty solution area is allowed. By default, an empty solution area with no dropped blocks will not be graded (invalid format).
 | string |  | Name of the file where the information from the blocks will be saved, to be used by the external grader.
 | ""random"", ""ordered"", or ""alphabetized"" | ""random"" | The order of the blocks in the source area. See more details below.
 | boolean | false | Enable both the ability for indentation in the solution area and the grading of the expected indentation (set by
 | integer | special | The maximum number of incorrect answers to be displayed in the source area. The incorrect answers are set using
 | integer | special | The minimum number of incorrect answers to be displayed in the source area. The incorrect answers are set using
 | string | ""Drag from here"" | The text that appears at the start of the source area.
 | string | ""Construct your solution here"" | The text that appears at the start of the solution area.
 | ""right"" or ""bottom"" | ""right"" | 
 | ""none"" or ""lcs"" | Depends on | For the
 | ""none"", ""first-wrong"", or ""first-wrong-verbose"" | ""none"" | The level of feedback the student will recieve upon giving an incorrect answer. Available with the
 | ""code"" or ""default"" | ""default"" | If this property is set to ""code"", then the contents of each of the blocks will be wrapped with a
 | string | - | The programming language syntax highlighting to use. Only available when using
 | boolean | false | 
Attribute | Type | Default | Description
----------------------------------------
 | boolean | true | Specifies whether the answer block is a correct answer to the question (and should be moved to the solution area).
 | positive integer | — | This attribute is used when
 | integer in [-1, 4] | -1 | Specifies the correct indentation level of the block. For example, a value of
 | string | """" | Optional attribute when
 | string | """" | Optional attribute. Used to identify the block when declaring which other blocks depend on it or are a distractor for it.
 | string | """" | Optional attribute on blocks where
 | string | """" | Optional attribute, used when
","{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/proofBlocks', 'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/autograder/python/orderBlocksAddNumpy', 'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/element/orderBlocks', 'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/autograder/python/orderBlocksRandomParams'}","<p>Element to arrange given blocks of code or text that are displayed initially in the <em>source area</em>. The blocks can be moved to the <em>solution area</em> to construct the solution of the problem. In the example below, the source area is denoted by the header ""Drag from here"" and the solution area is denoted with the header ""Construct your solution here"".</p>

<p>
  <img alt="""" src=""pl-order-blocks.png""/>
</p>

<p>
  <strong>question.html</strong>
</p>

<strong>question.html</strong>
<pre class=""highlight"">
  <code class=""language-html"">&lt;p&gt;List all the even numbers in order:&lt;/p&gt;
&lt;pl-order-blocks answers-name=""order-numbers""&gt;
  &lt;pl-answer correct=""false""&gt;1&lt;/pl-answer&gt;
  &lt;pl-answer correct=""true""&gt;2&lt;/pl-answer&gt;
  &lt;pl-answer correct=""false""&gt;3&lt;/pl-answer&gt;
  &lt;pl-answer correct=""true""&gt;4&lt;/pl-answer&gt;
&lt;/pl-order-blocks&gt;</code>
</pre>

<p>Within the <code>pl-order-blocks</code> element, each element must either be a <code>pl-answer</code> or a <code>pl-block-group</code> (see details below for more info on <code>pl-block-group</code>). Each element within a <code>pl-block-group</code> must be a <code>pl-answer</code>. The <code>pl-answer</code> elements specify the content for each of the blocks, and may have the following attributes:</p>

<p>Different grading options are defined via the attribute <code>grading-method</code>:</p>

<ul>
<li><code>ordered</code>: in this method, the correct ordering of the blocks is defined by the ordering in which
  the correct answers (defined in <code>pl-answer</code>) appear in the HTML file. There is no partial credit for this option.</li>
<li><code>unordered</code>: in this method, if <code>n</code> is the total number of correct blocks, each correct block moved to the solution area is given <code>1/n</code> points, and each incorrect block moved to the solution area is subtracted by <code>1/n</code> points. The final score will be at least 0 (the student cannot earn a negative score by only moving incorrect answers). Note the ordering of the blocks does not matter. That is, any permutation of the answers within the solution area is accepted. There is partial credit for this option.</li>
<li><code>ranking</code>: in this method, the <code>ranking</code> attribute of the <code>pl-answer</code> options are used to check answer ordering. Every answer block <em>X</em> should have a <code>ranking</code> integer that is less than or equal to the answer block immediately below <em>X</em>. That is, the sequence of <code>ranking</code> integers of all the answer blocks should form a <em>nonstrictly increasing</em> sequence. If <code>n</code> is the total number of answers, each correctly ordered answer is worth <code>1/n</code>, up to the first incorrectly ordered answer. There is partial credit for this option.</li>
<li><code>dag</code>: in this method, the <code>depends</code> attibute of the <code>pl-answer</code> options are used to declare the directed acyclic graph relation between the blocks, and a correct answer is any topological sort of that directed acyclic graph. If <code>pl-block-group</code> elements are used to divide some blocks into groups, then a correct answer is a topological sort of the lines of the proof with the added condition that the lines of each group must be listed contiguously (as an example, this is useful for expressing a <a href=""https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/proofBlocks"">proof by cases</a> when the <code>dag</code> grader is used for mathematical proofs). Blocks inside a <code>pl-block-group</code> element may only depend or be depended on by blocks within the same <code>pl-block-group</code>, and <code>pl-blocks-group</code>s can be given their own <code>tag</code> and <code>depends</code> properties so that a block may depend on an entire group, or a group may depend on a block or group.</li>
<li><code>external</code>: in this method, the blocks moved to the solution area will be saved in the file <code>user_code.py</code>, and the correctness of the code will be checked using the external grader. Depending on the external grader grading code logic, it may be possible to enable or disable partial credit. The attribute <code>correct</code> for <code>pl-answer</code> can still be used in conjunction with <code>min-incorrect</code> and <code>max-incorrect</code> for display purposes only, but not used for grading purposes. The attributes <code>ranking</code> and <code>indent</code> are not allowed for this grading method.</li>
</ul>

<li><code>ordered</code>: in this method, the correct ordering of the blocks is defined by the ordering in which
  the correct answers (defined in <code>pl-answer</code>) appear in the HTML file. There is no partial credit for this option.</li>

<li><code>unordered</code>: in this method, if <code>n</code> is the total number of correct blocks, each correct block moved to the solution area is given <code>1/n</code> points, and each incorrect block moved to the solution area is subtracted by <code>1/n</code> points. The final score will be at least 0 (the student cannot earn a negative score by only moving incorrect answers). Note the ordering of the blocks does not matter. That is, any permutation of the answers within the solution area is accepted. There is partial credit for this option.</li>

<li><code>ranking</code>: in this method, the <code>ranking</code> attribute of the <code>pl-answer</code> options are used to check answer ordering. Every answer block <em>X</em> should have a <code>ranking</code> integer that is less than or equal to the answer block immediately below <em>X</em>. That is, the sequence of <code>ranking</code> integers of all the answer blocks should form a <em>nonstrictly increasing</em> sequence. If <code>n</code> is the total number of answers, each correctly ordered answer is worth <code>1/n</code>, up to the first incorrectly ordered answer. There is partial credit for this option.</li>

<em>X</em> should have a 
<em>X</em>. That is, the sequence of 
<em>nonstrictly increasing</em> sequence. If 
<li><code>dag</code>: in this method, the <code>depends</code> attibute of the <code>pl-answer</code> options are used to declare the directed acyclic graph relation between the blocks, and a correct answer is any topological sort of that directed acyclic graph. If <code>pl-block-group</code> elements are used to divide some blocks into groups, then a correct answer is a topological sort of the lines of the proof with the added condition that the lines of each group must be listed contiguously (as an example, this is useful for expressing a <a href=""https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/proofBlocks"">proof by cases</a> when the <code>dag</code> grader is used for mathematical proofs). Blocks inside a <code>pl-block-group</code> element may only depend or be depended on by blocks within the same <code>pl-block-group</code>, and <code>pl-blocks-group</code>s can be given their own <code>tag</code> and <code>depends</code> properties so that a block may depend on an entire group, or a group may depend on a block or group.</li>

<a href=""https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/proofBlocks"">proof by cases</a> when the 
<li><code>external</code>: in this method, the blocks moved to the solution area will be saved in the file <code>user_code.py</code>, and the correctness of the code will be checked using the external grader. Depending on the external grader grading code logic, it may be possible to enable or disable partial credit. The attribute <code>correct</code> for <code>pl-answer</code> can still be used in conjunction with <code>min-incorrect</code> and <code>max-incorrect</code> for display purposes only, but not used for grading purposes. The attributes <code>ranking</code> and <code>indent</code> are not allowed for this grading method.</li>

<p>Different ordering of the blocks in the source area defined via the attribute <code>source-blocks-order</code>:</p>

<ul>
<li><code>random</code>: the blocks are shuffled.</li>
<li><code>ordered</code>: the blocks appear in the source area in the same order they appear in the HTML file.</li>
<li><code>alphabetized</code>: the blocks are alphabetized according to their HTML contents. Take care when including HTML in blocks. For instance, <code>&lt;b&gt;cat&lt;/b&gt;</code> will appear before <code>&lt;i&gt;bat&lt;/i&gt;</code>.</li>
</ul>

<li><code>random</code>: the blocks are shuffled.</li>

<li><code>ordered</code>: the blocks appear in the source area in the same order they appear in the HTML file.</li>

<li><code>alphabetized</code>: the blocks are alphabetized according to their HTML contents. Take care when including HTML in blocks. For instance, <code>&lt;b&gt;cat&lt;/b&gt;</code> will appear before <code>&lt;i&gt;bat&lt;/i&gt;</code>.</li>

",pl-order-blocks,"[{'question_html': '<pl-question-panel>\n  <p> You can use Proof Blocks by using a <code>pl-order-blocks</code> element\n    with <code>grading-method=""dag""</code>. Use the <code>depends</code>\n    attribute on each line is to denote which lines of the proof must appear\n    before that line. The autograder will use this dependency information to\n    construct the dependency graph of the proof. Then a correct answer is a\n    topological sort of the lines of the proof. This example also uses the option\n    <code>feedback=""first-wrong""</code> to give the student feedback about where\n    the first wrong line of their proof was.\n  </p>\n\n  <p>\n    <strong>Example 1:</strong> Use a proof by contrapositive to show that if $2m^2 + n + 1$ is even then either $m$ or $n$ are odd.\n  </p>\n\n\n  </pl-question-panel>\n\n  <pl-order-blocks answers-name=""even-implies-odd"" source-blocks-order=""random"" grading-method=""dag"" feedback=""first-wrong"" partial-credit=""lcs"" solution-placement=""bottom"">\n    <pl-answer correct=""true"" tag=""1"" depends=""""  > Proof by Contrapositive:</pl-answer>\n    <pl-answer correct=""true"" tag=""2"" depends=""1"" > Take some $m \\in \\mathbb{Z}$ </pl-answer>\n    <pl-answer correct=""true"" tag=""3"" depends=""1"" > Take some $n \\in \\mathbb{Z}$ </pl-answer>\n    <pl-answer correct=""true"" tag=""4"" depends=""2"" > Assume $m$ is even</pl-answer>\n    <pl-answer correct=""true"" tag=""5"" depends=""3"" > Assume $n$ is even</pl-answer>\n    <pl-answer correct=""true"" tag=""6"" depends=""4"" > $\\exists l \\in \\mathbb{Z}$ such that $m = 2l$</pl-answer>\n    <pl-answer correct=""true"" tag=""7"" depends=""5"" > $\\exists k \\in \\mathbb{Z}$ such that $n = 2k$</pl-answer>\n    <pl-answer correct=""true"" tag=""8"" depends=""6,7"" > $2m^2 + n + 1 = 2(2l)^2 + 2k + 1 = 2(4l^2 + k) + 1$ </pl-answer>\n    <pl-answer correct=""true"" tag=""9"" depends=""8"" > Then since $2(4l^2 + k)$ is even, $2(4l^2 + k) + 1$ is odd. </pl-answer>\n  </pl-order-blocks>\n\n  <hr>\n\n  <pl-question-panel>\n\n  <p>\n    <strong>Example 2:</strong>Let $A, B,$ and $C$ be propositions. Prove that $(A \\land C) \\lor (A \\land B) \\rightarrow A $\n  </p>\n\n  <p>\n    This example uses the <code>pl-block-group</code> element, which can be used\n    to divide a proof into cases. In a proof that has cases, a correct answer is\n    any topological sort of the lines, with the added condition that any lines in\n    the same <code>pl-block-group</code> element must appear contiguously in the\n    solution, as when you are writing a proof by cases, you finish one case before\n    proving the next case.\n  </p>\n  </pl-question-panel>\n\n<pl-order-blocks answers-name=""proof-by-cases"" source-blocks-order=""random"" grading-method=""dag"">\n  <pl-answer correct=""true"" tag=""1""> Proof by Cases:</pl-answer>\n  <pl-block-group tag=""g1"" depends=""1"">\n    <pl-answer correct=""true"" tag=""2""> Case $A \\land C$: </pl-answer>\n    <pl-answer correct=""true"" tag=""3"" depends=""2""> Since $A \\land C$ is true, we know $A$ is true.</pl-answer>\n  </pl-block-group>\n  <pl-block-group tag=""g2"" depends=""1"">\n    <pl-answer correct=""true"" tag=""4""> Case $A \\land B$: </pl-answer>\n    <pl-answer correct=""true"" tag=""5"" depends=""4""> Since $A \\land B$ is true, we know $A$ is true.</pl-answer>\n  </pl-block-group>\n  <pl-answer correct=""true"" tag=""6"" depends=""g1,g2"">This completes the proof.</pl-answer>\n</pl-order-blocks>\n', 'server_file': 'import math\nimport random\n\n\ndef generate(data):\n    m = random.choice([3, 1.4, 1.6, 1.8])\n    h = random.choice([4, 12, 14, 16])\n    d = 1.5 * h\n    g = 9.8\n    v0xmin = d * math.sqrt(g / (2 * h))\n    v0x = round(random.choice([4, v0xmin * 1.4, v0xmin * 1.6, v0xmin * 1.8]), 3)\n\n    data[""params""][""m""] = m\n    data[""params""][""h""] = h\n    data[""params""][""d""] = d\n    data[""params""][""v0x""] = v0x\n\n    t = d / v0x\n\n    data[""params""][""t_c""] = round(t, 3)\n    data[""params""][""t_x1""] = round(math.sqrt(2 * h / g), 3)\n    data[""params""][""t_x2""] = round(v0x * 2 / g, 3)\n    data[""params""][""t_x3""] = round(h / m, 3)\n\n    v0y = 0.5 * g * t - h / t\n\n    data[""params""][""vy_c""] = round(v0y, 2)\n    data[""params""][""vy_x1""] = round(-math.sqrt((g * t) ** 2 + v0x**2 / 2), 2)\n    data[""params""][""vy_x2""] = round(-0.5 * g * t - h / 2, 2)\n    data[""params""][""vy_x3""] = round(-math.sqrt(v0x**2 + v0y**2), 2)\n    data[""params""][""vy_x4""] = 0\n'}, {'question_html': '<pl-question-panel>\n\n  <p>We want to run the following code snippet, where we randomly define two 1d numpy\n    arrays, and call a function that computes the dot product between these two arrays:</p>\n<pl-code language=python>\nimport numpy as np\n\na = np.random.rand(4)\nb = np.random.rand(4)\n\nprint(""# Given two 1d numpy arrays:"")\nprint(a)\nprint(b)\nprint(""# Your function returns:"")\nprint( my_dot_product(a,b) )\n</pl-code>\n\n  <p>\n    Write the function <code>my_dot_product</code>:\n  </p>\n\n</pl-question-panel>\n\n<pl-hide-in-panel answer=""true"">\n<pl-order-blocks answers-name=""coding"" grading-method=""external"" indentation=""true"" format=""code"" code-language=""python"">\n  <pl-answer>def my_dot_product(a,b):</pl-answer>\n  <pl-answer>return d</pl-answer>\n  <pl-answer>return </pl-answer>\n  <pl-answer>d = a*b</pl-answer>\n  <pl-answer>d = a@b</pl-answer>\n  <pl-answer>d = a.T@b</pl-answer>\n  <pl-answer>d = np.inner(a,b)</pl-answer>\n  <pl-answer>d = np.outer(a,b)</pl-answer>\n</pl-order-blocks>\n</pl-hide-in-panel>\n\n\n<pl-submission-panel>\n  <pl-external-grader-results></pl-external-grader-results>\n  <pl-file-preview></pl-file-preview>\n</pl-submission-panel>\n', 'server_file': 'def generate(data):\n    data[""params""][""names_for_user""] = []\n    data[""params""][""names_from_user""] = [\n        {\n            ""name"": ""my_dot_product"",\n            ""description"": ""Function that computes the dot product between two given 1d arrays of same length"",\n            ""type"": ""Python Function"",\n        }\n    ]\n'}, {'question_html': '<pl-question-panel>\n<p>\nThis question illustrates different use cases for the\n<a href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-order-blocks-element""><code>pl-order-blocks</code></a>.\n</p>\n<hr>\n<p>\n<strong>Example 1:</strong> Drag all the prime numbers below to the answer zone. Remember 1 is not a prime number.\n</p>\n\n<p> This example uses the attribute <code>source-blocks-order=""ordered""</code> so that\n  the displayed blocks appear in the same order provided by the HTML answers. It also\n  uses the attribute <code>grading-method=""unordered""</code>, so that any ordering of the solution is accepted as correct.</p>\n\n</pl-question-panel>\n\n<pl-order-blocks answers-name=""prime-numbers-unordered"" source-blocks-order=""ordered"" grading-method=""unordered"">\n  <pl-answer correct=""false"">1</pl-answer>\n  <pl-answer correct=""true"">2</pl-answer>\n  <pl-answer correct=""true"">3</pl-answer>\n  <pl-answer correct=""false"">4</pl-answer>\n  <pl-answer correct=""true"">5</pl-answer>\n  <pl-answer correct=""false"">6</pl-answer>\n  <pl-answer correct=""true"">7</pl-answer>\n  <pl-answer correct=""false"">This is an example very long tile to test CSS overflow</pl-answer>\n</pl-order-blocks>\n\n<hr>\n\n<pl-question-panel>\n<p>\n  <strong>Example 2:</strong> Drag all the prime numbers below to the answer zone <strong> in ascending order</strong>.\n</p>\n\n<p> This example uses the attributes <code>min-incorrect=""2""</code> and\n  <code>max-incorrect=""4""</code> to display a minimum of 2 incorrect distractors and maximum of 4.\n  Since this example uses the default values for <code>source-blocks-order=""random""</code> and <code>grading-method=""ordered""</code>,\n  the blocks in the source area appear shuffled, and the correct answer from the solution area follows\n  the order defined by the <code>pl-answers</code>.</p>\n\n</pl-question-panel>\n<pl-order-blocks answers-name=""prime-numbers-ordered"" min-incorrect=""2"" max-incorrect=""4"">\n  <pl-answer correct=""false"">1</pl-answer>\n  <pl-answer correct=""true"">2</pl-answer>\n  <pl-answer correct=""true"">3</pl-answer>\n  <pl-answer correct=""false"">4</pl-answer>\n  <pl-answer correct=""true"">5</pl-answer>\n  <pl-answer correct=""false"">6</pl-answer>\n  <pl-answer correct=""true"">7</pl-answer>\n  <pl-answer correct=""false"">8</pl-answer>\n  <pl-answer correct=""false"">9</pl-answer>\n  <pl-answer correct=""false"">10</pl-answer>\n</pl-order-blocks>\n\n<hr>\n\n<pl-question-panel>\n<p>\n  <strong>Example 3:</strong>  Implement the Python function <code>my_sum</code>, which takes 2 numbers, <code>first</code> and <code>second</code>,\n  and return their sum. Note that the ordering of instantiation, computation, and returning of the value must be correct.\n  Remember to indent your code! </p>\n<p>\n This examples uses <code>grading-method=""ranking""</code> to control how the correct solution is ordered\n  and <code>indent</code> attribute in <code>pl-answer</code> to define expected code indentation. This example\n  also demonstrates the use of the attribute <code>distractor-for</code> to visual pair together blocks with\n  their distractor blocks.\n</p>\n</pl-question-panel>\n\n<pl-order-blocks\n  answers-name=""python-ordered""\n  grading-method=""ranking""\n  indentation=""true""\n  max-indent=""2""\n  format=""code""\n  code-language=""python""\n  feedback=""first-wrong-verbose""\n>\n  <pl-answer correct=""true"" ranking=""1"" indent=""0"">def my_sum(first, second):</pl-answer>\n  <pl-answer correct=""true"" ranking=""2"" indent=""1"">sum = 0</pl-answer>\n  <pl-answer correct=""true"" ranking=""3"" indent=""1"" tag=""addfirst"">sum += first</pl-answer>\n  <pl-answer correct=""true"" ranking=""3"" indent=""1"" tag=""addsecond"">sum += second</pl-answer>\n  <pl-answer correct=""true"" ranking=""4"" indent=""1"">return sum</pl-answer>\n  <pl-answer correct=""false"" distractor-for=""addfirst"" distractor-feedback=""You need to store the result of the sum in a variable!"">sum + first</pl-answer>\n  <pl-answer correct=""false"" distractor-for=""addfirst"">sum &= first</pl-answer>\n  <pl-answer correct=""false"" distractor-for=""addsecond"" distractor-feedback=""You need to store the result of the sum in a variable!"">sum + second</pl-answer>\n</pl-order-blocks>\n\n<hr>\n\n<pl-question-panel>\n<p>\n  <strong>Example 4:</strong> Prove that $A \\land B \\land C \\rightarrow A \\land C$\n</p>\n\n<p>This example uses the attribute <code>grading-method=""dag""</code> to control how the correct solution is ordered.\nThis is especially useful when you want students to construct a mathematical proof, where the dependency of lines of the\nproof on one another is given by a directed acyclic graph (DAG) structure. The <code>depends</code> attribute on each\nline is used to denote which lines of the proof must appear before a particular line.\nThen a correct answer is a topological sort of the lines of the proof.\nThe attribute <code>solution-placement=""bottom""</code> is used\nto display the input area above the output area.</p>\n</pl-question-panel>\n\n<pl-order-blocks\n  answers-name=""conjunction-implies-conjunction""\n  grading-method=""dag""\n  solution-placement=""bottom""\n  feedback=""first-wrong""\n>\n  <pl-answer correct=""true"" tag=""1"" depends=""""  > Assume $A \\land B \\land C$.</pl-answer>\n  <pl-answer correct=""true"" tag=""2"" depends=""1"" > Then $A$ is true. </pl-answer>\n  <pl-answer correct=""true"" tag=""3"" depends=""1"" > Then $C$ is true. </pl-answer>\n  <pl-answer correct=""true"" tag=""4"" depends=""2,3"" > Since $A$ and $C$, we know $A \\land C$</pl-answer>\n</pl-order-blocks>\n\n<hr>\n\n<pl-question-panel>\n  <p>\n    <strong>Example 5:</strong> Drag all fruits to the answer zone.\n  </p>\n\n  <p>\n    This example uses the attribute <code>source-blocks-order=""alphabetized""</code>\n    to order the source blocks alphabetically, even though they appear in a random\n    order in <code>question.html</code>.\n  </p>\n</pl-question-panel>\n\n<pl-order-blocks answers-name=""alphabetized"" source-blocks-order=""alphabetized"" grading-method=""unordered"">\n  <pl-answer correct=""true"">eggplant</pl-answer>\n  <pl-answer correct=""true"">banana</pl-answer>\n  <pl-answer correct=""true"">date</pl-answer>\n  <pl-answer correct=""false"">carrot</pl-answer>\n  <pl-answer correct=""true"">apple</pl-answer>\n</pl-order-blocks>\n\n<pl-question-panel>\n  <p>\n    <strong>Example 6:</strong> Create a SQL command that selects all students who are enrolled in computer science.\n  </p>\n\n  <p>\n    This example uses the attributes <code>solution-placement=""bottom""</code>\n    and <code>block_orientation=""horizontal""</code> to create horizontal arrangement \n    of the source blocks.\n  </p>\n  <br>\n  <b>Note:</b> This model of block arrangement, particularly for the context of computer science, is attributed to\n  <a href=""https://doi.org/10.1145/3488042.3489968"">""Regex Parsons: Using Horizontal Parsons Problems to Scaffold Learning Regex""</a>\n\n</pl-question-panel>\n\n<pl-order-blocks answers-name=""sql-query"" format=""code"" code-language=""sql"" solution-placement=""bottom"" inline=""true"">\n  <pl-answer correct=""true"">SELECT</pl-answer>\n  <pl-answer correct=""true"">students</pl-answer>\n  <pl-answer correct=""true"">FROM</pl-answer>\n  <pl-answer correct=""true"">enrollments</pl-answer>\n  <pl-answer correct=""true"">WHERE</pl-answer>\n  <pl-answer correct=""true"">major</pl-answer>\n  <pl-answer correct=""true"">=</pl-answer>\n  <pl-answer correct=""true"">""computer science""</pl-answer>\n</pl-order-blocks>\n\n', 'server_file': 'def generate(data):\n    data[""params""][""names_for_user""] = []\n    data[""params""][""names_from_user""] = [\n        {\n            ""name"": ""my_dot_product"",\n            ""description"": ""Function that computes the dot product between two given 1d arrays of same length"",\n            ""type"": ""Python Function"",\n        }\n    ]\n'}, {'question_html': '<pl-question-panel>\n  <p>\n    Write a Python function that returns an {{params.type}} number.\n  </p>\n\n</pl-question-panel>\n\n<pl-hide-in-panel answer=""true"">\n<pl-order-blocks answers-name=""coding"" grading-method=""external"" indentation=""true"" format=""code"" code-language=""python"">\n  <pl-answer>def return_number():</pl-answer>\n  <pl-answer>{{params.option1}}</pl-answer>\n  <pl-answer>{{params.option2}}</pl-answer>\n  <pl-answer>{{params.option3}}</pl-answer>\n  <pl-answer>{{params.option4}}</pl-answer>\n  <pl-answer>return a</pl-answer>\n</pl-order-blocks>\n</pl-hide-in-panel>\n\n<pl-submission-panel>\n  <pl-external-grader-results></pl-external-grader-results>\n  <pl-file-preview></pl-file-preview>\n</pl-submission-panel>\n', 'server_file': 'import numpy as np\n\n\ndef generate(data):\n    data[""params""][""type""] = np.random.choice([""odd"", ""even""])\n\n    a = np.random.choice([3, 5, 7])\n\n    data[""params""][""option1""] = ""a = "" + str(a)\n    data[""params""][""option2""] = ""a = "" + str(2 * a)\n    data[""params""][""option3""] = ""a = "" + str(2 * a + 1)\n    data[""params""][""option4""] = ""a = "" + str(4 * a)\n\n    data[""params""][""names_for_user""] = []\n    data[""params""][""names_from_user""] = [\n        {\n            ""name"": ""return_number"",\n            ""description"": ""returns specified number"",\n            ""type"": ""Function"",\n        }\n    ]\n'}]","
description:

The <pl-order-blocks> tag is a custom HTML element designed for interactive educational exercises where students must arrange blocks of code or text into a correct order. This functionality is particularly useful in scenarios where sequencing or organization is pivotal to problem-solving, such as arranging algorithms, processes, or lists. This tag enhances the learning experience by allowing students to engage with content actively, facilitating a deeper understanding through manipulation and arrangement of presented material. Students can drag items from a 'source area' to a 'solution area' to form the correct solution, reinforcing their comprehension of the subject matter involved.

use_cases:
- To create an exercise where students must order a set of mathematical equations in their correct sequence to solve a problem, allowing them to visually interact with the material and understand the importance of order in mathematics.
- In programming education, to allow students to arrange lines of code, thus teaching them about the correct order of operations in programming constructs, which is critical for error-free coding and logical flow.
- To assess knowledge of historical events where students must drag and drop events into chronological order to illustrate their understanding of timelines and historical causes/effects.

example_questions:
- Arrange the following events in the correct chronological order: 1. Arrival of the Pilgrims, 2. American Civil War, 3. Declaration of Independence. (Use the <pl-order-blocks> tag to create the ordering task.)
- Put the steps of the scientific method in the correct order: 1. Analysis, 2. Hypothesis, 3. Experiment, 4. Conclusion. (Utilize <pl-order-blocks> for this exercise.)
- Sequence the following programming steps to form a valid function definition: 1. Return statement, 2. Parameter declaration, 3. Function name, 4. Opening brace. (Incorporate <pl-order-blocks> for interaction.)
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | — | Variable name to store data in. Note that this attribute has to be unique within a question, i.e., no value for this attribute should be repeated within a question. If the correct answer
 | integer | 1 | Weight to use when computing a weighted average score over elements.
 | float | special | Correct answer for grading. Defaults to
 | text | — | A prefix to display before the input box (e.g.,
 | ""block"" or ""inline"" | ""inline"" | How to display the input field.
 | string | — | A comma-delimited list of symbols that can be used in the symbolic expression.
 | boolean | false | Whether complex numbers (expressions with
 | string |  | The imaginary unit that is used for display. It must be either
 | boolean | true | Whether trigonometric functions (
 | boolean | false | Whether or not an empty input box is allowed. By default, an empty input box will not be graded (invalid format).
 | string | 0 (zero) | Expression to be used as an answer if the answer is left blank. Only applied if
 | integer | 35 | Size of the input box.
 | boolean | true | Show the question mark at the end of the input displaying required input parameters.
 | string | ""symbolic expression"" | Hint displayed inside the input box describing the expected type of input.
 | string | - | A comma-delimited list of custom functions that can be used in the symbolic expression.
 | boolean | true | Whether to show the score badge next to this element.
 | text | - | A suffix to display after the input box (e.g.,
",{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/element/symbolicInput'},"<p>Fill in the blank field that allows for mathematical symbol input.</p>

<p>
  <img alt="""" src=""pl-symbolic-input.png""/>
</p>

<p>
  <strong>question.html</strong>
</p>

<strong>question.html</strong>
<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-symbolic-input answers-name=""symbolic_math"" variables=""x, y"" label=""$z =$""&gt;&lt;/pl-symbolic-input&gt;</code>
</pre>

<p>
  <strong>server.py</strong>
</p>

<strong>server.py</strong>
<pre class=""highlight"">
  <code class=""language-python"">import prairielearn as pl
import sympy

def generate(data):

    # Declare math symbols
    x, y = sympy.symbols(""x y"")

    # Describe the equation
    z = x + y + 1

    # Answer to fill in the blank input stored as JSON.
    data[""correct_answers""][""symbolic_math""] = pl.to_json(z)</code>
</pre>

<p>Correct answers are best created as <code>sympy</code> expressions and converted to json using <code>pl.to_json</code>. It is also possible to specify the correct answer simply as a string, e.g., <code>x + y + 1</code>.</p>

<p>Variables with the same name as greek letters (e.g., <code>alpha</code>, <code>beta</code>, etc.) will be automatically converted to their LaTeX equivalents for display on the correct answer and submission panels.</p>

<p>Do not include <code>i</code> or <code>j</code> in the list of <code>variables</code> if <code>allow-complex=""true""</code>, and do not include any other reserved name in your list of <code>variables</code> (<code>e</code>, <code>pi</code>, <code>cos</code>, <code>sin</code>, etc). The element code will check for (and disallow) conflicts between your list of <code>variables</code>, <code>custom-functions</code>, and reserved names.</p>

<p>Note that variables created with additional assumptions in a correct answer will have those assumptions respected when evaluating student answers.
See example question for details.</p>

",pl-symbolic-input,"[{'question_html': '<div class=""card my-2"">\n    <div class=""card-header"">\n        An example in which complex numbers are not allowed (<code>allow-complex=""false""</code>)\n    </div>\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>Suppose $$y = a x + b.$$ Assuming that $a \\neq 0$, solve for $x$.</p>\n        </pl-question-panel>\n        <pl-symbolic-input answers-name=""x"" variables=""a, b, y"" label=""$x=$""></pl-symbolic-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        An example in which complex numbers are allowed (<code>allow-complex=""true""</code>)\n    </div>\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>Write an expression for the complex number $z$ whose argument is $a$ (in radians) and whose modulus is\n                $m$.</p>\n        </pl-question-panel>\n        <pl-symbolic-input answers-name=""z"" variables=""a, m"" allow-complex=""true"" label=""$z=$""></pl-symbolic-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        An example in which the correct answer is specified as a string in <code>server.py</code>\n    </div>\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>Write an expression for the current $I$ in a resistor if the voltage is $V$ and the resistance is $R$.\n            </p>\n        </pl-question-panel>\n        <pl-symbolic-input answers-name=""I"" variables=""V, R"" label=""$I=$""></pl-symbolic-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        An example in which we specify a different imaginary unit for display\n        (<code>imaginary-unit-for-display=""j""</code>)\n    </div>\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>Write an expression for the complex number $c$ whose real part is $a$ and whose imaginary part is $b$.\n            </p>\n        </pl-question-panel>\n        <pl-symbolic-input answers-name=""c"" variables=""a, b"" allow-complex=""true"" imaginary-unit-for-display=""j""\n            label=""$c=$""></pl-symbolic-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        An example in which we change display attributes\n    </div>\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>The size of the input box can be set with the attribute <code>size</code>, and the attribute\n                <code>show-help-text=""false""</code> removes the button for the help popup.\n                The attribute <code>placeholder</code> can be used to set the placeholder text. This box below has\n                <code>size=5</code> instead of the default <code>size=35</code>.\n            </p>\n            <p>Write an expression for the first derivative of $\\frac{1}{2} x^2$.</p>\n        </pl-question-panel>\n        <pl-symbolic-input answers-name=""dx"" variables=""x"" size=""5"" show-help-text=""false"" placeholder=""""\n            label=""$\\dfrac{d}{dx} \\frac{1}{2}x^2 =$""></pl-symbolic-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        An example in which we allow a blank answer.\n    </div>\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>The <code>allow-blank</code> attribute allows an expression to be left blank by the user and still be\n                considered valid. By default a blank expression is equivalent to the expression <code>0</code>, unless\n                the <code>blank-value</code> is used. The <code>placeholder</code> attribute allows setting custom\n                placeholder text.</p>\n            <p>Simplify the expression $x^2+x+1$, or leave it blank if the expression cannot be simplified further.</p>\n        </pl-question-panel>\n        <pl-symbolic-input answers-name=""simplify"" variables=""x"" allow-blank=""true"" blank-value=""x^2+x+1""\n            placeholder=""symbolic expression (blank is allowed)""></pl-symbolic-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        An example where we use assumptions.\n    </div>\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>Sometimes, certain expressions can only be treated as equivalent by sympy if additional assumptions are\n                made. For example, consider that $\\sqrt{B^2} = B$ is only true if $B \\geq 0$. To use these,\n                assumptions must be set in the <code>server.py</code> file when variables are declared.\n            </p>\n            <p>\n                Submit an expression equivalent to $\\sqrt{B^2}$ when assuming $B > 0$.\n            </p>\n        </pl-question-panel>\n        <pl-symbolic-input answers-name=""assumptions"" variables=""B""></pl-symbolic-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Another example where we use assumptions.\n    </div>\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Simplify $|C|$ assuming that $C \\leq 0$.\n            </p>\n        </pl-question-panel>\n        <pl-symbolic-input answers-name=""assumptions_2"" variables=""C""></pl-symbolic-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        An example in which trig functions are not allowed (<code>allow-trig-functions=""false""</code>)\n    </div>\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>What is the value of $\\cos(\\pi) * x$?</p>\n        </pl-question-panel>\n        <pl-symbolic-input answers-name=""no_trig"" allow-trig-functions=""false""\n            variables=""x"" correct-answer=""-x"" label=""$\\cos(\\pi) * x = $""></pl-symbolic-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Custom functions test.\n    </div>\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Submit $f(x) + beef(\\alpha)$, where $\\alpha$ should be spelled out as <code>alpha</code> in the submission.\n            </p>\n        </pl-question-panel>\n        <pl-symbolic-input answers-name=""custom_function"" variables=""x,alpha"" custom-functions=""f,beef""\n            correct-answer=""f(x) + beef(alpha)""></pl-symbolic-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-header"">\n        Another custom functions test.\n    </div>\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Submit $beef(y) + the(y)$. We set <code>show-score=""false""</code> to hide the score badge and <code>suffix=""$= \\text{where?}$""</code>\n                to set the suffix.\n            </p>\n        </pl-question-panel>\n        <pl-symbolic-input answers-name=""custom_function_2"" variables=""y"" show-score=""false"" custom-functions=""beef,the"" suffix=""$= \\text{where?}$""></pl-symbolic-input>\n    </div>\n</div>\n', 'server_file': 'import prairielearn as pl\nimport sympy\n\n\ndef generate(data):\n    (y, b, a, m) = sympy.var(""y b a m"")\n    x = (y - b) / a\n    z = m * (sympy.cos(a) + sympy.I * sympy.sin(a))\n    c = a + sympy.I * b\n    data[""correct_answers""][""x""] = pl.to_json(x)\n    data[""correct_answers""][""z""] = pl.to_json(z)\n    data[""correct_answers""][""I""] = ""V / R""\n    data[""correct_answers""][""c""] = pl.to_json(c)\n    data[""correct_answers""][""dx""] = ""x""\n    x = sympy.var(""x"")\n    data[""correct_answers""][""simplify""] = pl.to_json(x**2 + x + 1)\n\n    B = sympy.symbols(""B"", positive=True)\n    data[""correct_answers""][""assumptions""] = pl.to_json(sympy.sqrt(B**2))\n\n    C = sympy.symbols(""C"", nonpositive=True)\n    data[""correct_answers""][""assumptions_2""] = pl.to_json(sympy.Abs(C))\n\n    the = sympy.Function(""the"")\n    beef = sympy.Function(""beef"")\n\n    ans = the(y) + beef(y)\n    data[""correct_answers""][""custom_function_2""] = pl.to_json(ans)\n'}]","
description:

The `pl-symbolic-input` HTML tag is designed for educational platforms and online assessment tools to facilitate the entry of mathematical symbolic expressions by students. It allows educators to create fill-in-the-blank style questions where students can input mathematical formulas or equations using symbols. This tag is particularly useful in disciplines that require a deep understanding of mathematical concepts, such as algebra, calculus, and other fields that involve symbolic computation. By using this tag, educators can enhance interactive learning experiences, allowing students to engage directly with mathematical content and receive immediate feedback on their submissions.

use_cases:
- Creating online quizzes that require students to solve algebraic equations and enter their solutions in a symbolic form, such as solving for `z` in the equation `z = x + y + 1`.
- Designing interactive math assignments that let students submit symbolic derivatives or integrals, enhancing their understanding of calculus concepts as they directly practice with input fields.
- Facilitating exam questions in a remote learning environment where students need to input symbolic representations of physics formulas, like `F = ma`, ensuring accurate and structured responses.

example_questions:
- What is the value of $z = x + y + 1$ when $x = 3$ and $y = 2$?
- Determine the derivative of the function $f(x) = x^2 + 3x + 5$. Enter your answer as a symbolic expression.
- If $a = 4$ and $b = 2$, what is the value of $c = a^2 + b^2 + 2ab$? Fill in the blank with your symbolic answer.
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | - | Variable name to store data in. Note that this attribute has to be unique within a question, i.e., no value for this attribute should be repeated within a question.
 | integer | 1 | Weight to use when computing a weighted average score over elements.
 | string | special | Correct answer for grading. Defaults to
 | text | - | A prefix to display before the input box (e.g.,
 | text | - | A suffix to display after the input box (e.g.,
 | ""block"" or ""inline"" | ""inline"" | How to display the input field.
 | ""with-units"", ""exact-units"", or ""only-units"" | ""with-units"" | How to grade student submission. ""only-units"" only checks for the units input by the student. ""exact-units"" asks for a quantity with a specified unit. ""with-units"" is similar to ""exact-units"", but will automatically convert the units used by the given answer if possible.
 | ""exact"", ""sigfig"", ""decdig"" or ""relabs"" | ""sigfig"" | How to grade. ""relabs"" uses relative (""rtol"") and absolute (""atol"") tolerances. ""sigfig"" use ""digits"" significant digits. ""decdig"" uses ""digits"" after decimal place, ""exact"" uses
 | number | 1e-2 | Relative tolerance for
 | string | 1e-8 | Absolute tolerance for
 | integer | 2 | Number of digits that must be correct for
 | boolean | false | Whether or not an empty input box is allowed. By default, empty input boxes will not be graded (invalid format).
 | string | """" | Value to be used as an answer if element is left blank. Only applied if
 | integer | 35 | Size of the input box.
 | boolean | true | Show the question mark at the end of the input displaying required input parameters.
 | string | - | String to override default placeholder text. The default placeholder gives information about the comparison type used.
 | float | - | Fraction of partial credit given to answers of correct magnitude and incorrect units when
 | boolean | true | Whether to show detailed feedback from the autograder for incorrect answers (for example, stating whether a unit or magnitude specifically is incorrect). Feedback varies based on
 | string | - | Custom format specifier to use when formatting the submitted and correct answer after processing. By default, uses standard string conversion. A full description of the format can be found
 | boolean | true | Whether to show the score badge next to this element.
",{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/element/unitsInput'},"<p>Fill in the blank field that allows for <strong>numeric</strong> input and accompanying <strong>units</strong>.</p>

<p>
  <strong>question.html</strong>
</p>

<strong>question.html</strong>
<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-units-input answers-name=""c_1"" correct-answer=""1m"" atol=""1cm""&gt;&lt;/pl-units-input&gt;</code>
</pre>

<p>This element uses <a href=""https://pint.readthedocs.io/en/stable/index.html"">Pint</a> to parse and represent units. Any units allowed by Pint are supported by this element. To obtain a <code>Pint</code> unit registry, question code can use <code>pl.get_unit_registry()</code> to construct a default unit registry. This is recommended over constructing a registry using the constructor provided by <code>Pint</code> (as this does not use caching and is slower).</p>

<a href=""https://pint.readthedocs.io/en/stable/index.html"">Pint</a> to parse and represent units. Any units allowed by Pint are supported by this element. To obtain a 
",pl-units-input,"[{'question_html': '<pl-question-panel>\n    <p>\n        Questions below were designed to showcase the different features of\n        <a\n            href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-units-input-element""><code>pl-units-input</code></a>.\n        The goal of <a\n            href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-units-input-element""><code>pl-units-input</code></a>\n        is to allow users to enter <b>real values with units</b>. This element has similar behavior to the <a\n            href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-number-input-element""><code>pl-number-input</code></a>\n        element, with the added benefit of being able to interact with units.\n    </p>\n</pl-question-panel>\n\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p> Within this question, you can observe the default behavior of the <a\n                    href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-units-input-element""><code>pl-units-input</code></a>\n                element. The submitted answer and reference solutions will be first be converted to base units and then\n                compared. Submitting units of incorrect dimensionality will not be given any credit.\n            </p>\n            <p> What is the length of a meter stick? </p>\n        </pl-question-panel>\n        <pl-units-input answers-name=""c_1"" correct-answer=""1m""></pl-units-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>\n                Here, we\'ve set <code>grading-mode=""exact-units""</code>, requiring units matching the reference solution\n                exactly. The default input field has help text as a placeholder as well as a question button and\n                is set to use <code>""relabs""</code> to check the tolerance, which is a combination of relative\n                (<code>""rtol""</code>) and absolute (<code>""atol""</code>) tolerances.\n                Make sure to include the unit suffix <code>m</code> to indicate that your answer is in meters.\n            </p>\n            <p> What is the length of a meter stick? </p>\n        </pl-question-panel>\n        <pl-units-input answers-name=""c_2"" correct-answer=""1m"" magnitude-partial-credit=""0.5""\n            grading-mode=""exact-units""></pl-units-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>This question modifies the default relative tolerance (of <code>1e-3</code>) and absolute tolerance (of\n                <code>1e-8</code>) underneath <a\n                    href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-units-input-element""><code>pl-units-input</code></a>\n                element. Furthermore, we add a label to the front of the input field to specify what the field should\n                receive.\n            </p>\n            <p> Let $c$ be the length of a meter stick. What is the value of $c$?</p>\n        </pl-question-panel>\n        <pl-units-input answers-name=""c_3"" label=""$c = $"" rtol=""1e-3"" atol=""1e-10"" correct-answer=""1m""\n            grading-mode=""exact-units""></pl-units-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>In this question, we opt to change the default comparison of <a\n                    href=""http://prairielearn.readthedocs.io/en/latest/elements/#pl-units-input-element""><code>pl-units-input</code></a>\n                from relative and absolute tolerances (<code>comparison=""relabs""</code>) to significant digits\n                (<code>comparison=""sigfigs""</code>), which has a default of two digits. In additon, this question\n                showcases some of the more complex units that this element can handle.\n                We also remove the help popup box found in by setting <code>show-help-text=""false""</code>.\n            </p>\n            <p> Let $g$ be the acceleration due to gravity at Earth\'s surface. What is the value of $g$?</p>\n        </pl-question-panel>\n        <pl-units-input answers-name=""c_4"" label=""$g = $"" comparison=""sigfig"" correct-answer=""9.8 m/s**2""\n            show-help-text=""false"" grading-mode=""exact-units""></pl-units-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p> For this question, we only ask for units by setting <code>grading-mode=""only-units""</code>.\n            </p>\n            <p> What is the acceleration due to gravity at Earth\'s surface? </p>\n        </pl-question-panel>\n        <pl-units-input answers-name=""c_5"" label=""$9.8$"" grading-mode=""only-units""\n            correct-answer=""m/s^2""></pl-units-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>This example shows the use of the attribute <code>size</code> to control the width of the input box.\n                We also use <code>placeholder=""""</code> and <code>show-help-text=""false""</code>. We have also\n                set <code>allow-feedback=""False""</code> to suppress feedback given to students, and\n                <code>custom-format="".2g""</code> to show a fixed number of digits after the answer has been parsed.\n            </p>\n            <p>Express the distance of one mile in feet (include unit).</p>\n        </pl-question-panel>\n        Distance of 1 mile =\n        <pl-units-input answers-name=""c_6"" placeholder="""" show-help-text=""false"" size=""10"" comparison=""exact""\n            allow-feedback=""false"" grading-mode=""exact-units"" digits=""4"" custom-format="".3g""></pl-units-input>\n    </div>\n</div>\n\n<div class=""card my-2"">\n    <div class=""card-body"">\n        <pl-question-panel>\n            <p>This example shows the use of the attribute <code>allow-blank</code> to allow students to leave\n                this input blank. We set <code>blank-value=""1m""</code> to customize the value used for the blank input.\n                We also set <code>show-score=""false""</code> to hide the score badge.\n            </p>\n            <p>How long is a meter stick? Leave the box blank to submit ""1 meter"".</p>\n        </pl-question-panel>\n        <pl-units-input answers-name=""c_7"" display=""block"" correct-answer=""1m"" allow-blank=""True"" atol=""1cm""\n            blank-value=""1m"" placeholder=""1 meter"" show-score=""false""></pl-units-input>\n    </div>\n</div>\n', 'server_file': 'import prairielearn as pl\n\n\ndef generate(data):\n    ureg = pl.get_unit_registry()\n    answer = 5280 * ureg.foot\n\n    data[""correct_answers""][""c_6""] = str(answer)\n'}]","
description:

The `pl-units-input` tag is specifically designed for educational contexts where students need to provide quantitative answers in a formulaic manner, incorporating both numerical values and associated units of measurement. This tag is particularly useful in science, engineering, or mathematics subjects where unit conversion and precision are crucial. For instance, it allows instructors to assess students' understanding of units, prompting them to provide accurate values alongside their respective measurement units. This ensures that the solutions reflect not only correct numerical calculations but also a proper understanding of measurement conventions.

use_cases:
- Science assessments where students must provide measurements (e.g., length, mass) with appropriate units, such as asking for the length of an object in meters.
- Mathematics problems that require students to calculate an area (like square meters) and specify the units alongside their numeric answers to test their understanding of dimensional analysis.
- Engineering quizzes that ask for the conversion of units (e.g., converting kilometers to meters) as students must demonstrate not only numerical proficiency but also unit conversion skills.

example_questions:
- What is the speed of the car in meters per second if it travels 300 meters in 10 seconds? <pl-units-input answers-name='speed_1' correct-answer='30m/s'> </pl-units-input>
- A cylinder has a radius of 2 cm and a height of 5 cm. What is the volume in cubic centimeters? <pl-units-input answers-name='volume_1' correct-answer='62.83cm^3'> </pl-units-input>
- Convert 10 liters to cubic meters. <pl-units-input answers-name='liters_to_cubic_meters' correct-answer='0.01m^3'> </pl-units-input>
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | — | Name of variable in
 | string |  | Number display format. If
 | integer |  | Number of digits to display according to the choice of
","{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/element/matrixLatex', 'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/randomCheckbox'}","<p>Displays a scalar or 2D numpy array of numbers in LaTeX using mathjax.</p>

<p>
  <img alt="""" src=""pl-matrix-latex.png""/>
</p>

<p>
  <strong>question.html</strong>
</p>

<strong>question.html</strong>
<pre class=""highlight"">
  <code class=""language-html"">$$C = &lt;pl-matrix-latex params-name=""matrixC""&gt;&lt;/pl-matrix-latex&gt;$$</code>
</pre>

<p>
  <strong>server.py</strong>
</p>

<strong>server.py</strong>
<pre class=""highlight"">
  <code class=""language-python"">import prairielearn as pl
import numpy as np

def generate(data):

    # Construct a matrix
    mat = np.matrix(""1 2; 3 4"")

    # Export matrix to be displayed in question.html
    data[""params""][""matrixC""] = pl.to_json(mat)</code>
</pre>

<p>Depending on whether <code>data[""params""]</code> contains either a scalar or 2D numpy array of numbers,
one of the following will be returned.</p>

<ul>
<li><strong>scalar</strong><ul>
<li>a string containing the scalar not wrapped in brackets.</li>
</ul>
</li>
<li><strong>numpy 2D array</strong><ul>
<li>a string formatted using the <code>bmatrix</code> LaTeX style.</li>
</ul>
</li>
</ul>

<li><strong>scalar</strong><ul>
<li>a string containing the scalar not wrapped in brackets.</li>
</ul>
</li>

<strong>scalar</strong>
<ul>
<li>a string containing the scalar not wrapped in brackets.</li>
</ul>

<li>a string containing the scalar not wrapped in brackets.</li>

<li><strong>numpy 2D array</strong><ul>
<li>a string formatted using the <code>bmatrix</code> LaTeX style.</li>
</ul>
</li>

<strong>numpy 2D array</strong>
<ul>
<li>a string formatted using the <code>bmatrix</code> LaTeX style.</li>
</ul>

<li>a string formatted using the <code>bmatrix</code> LaTeX style.</li>

<p>Sample LaTeX formatting:</p>

<pre class=""highlight"">
  <code class=""language-latex"">\begin{bmatrix} ... &amp; ... \\ ... &amp; ... \end{bmatrix}</code>
</pre>

<p>As an example, consider the need to display the following matrix operations:</p>

<pre class=""highlight"">
  <code>x = [A][b] + [c]</code>
</pre>

<p>In this case, we would write:</p>

<pre class=""highlight"">
  <code class=""language-html"">${\bf x} = &lt;pl-matrix-latex params-name=""A"" digits=""1""&gt;&lt;/pl-matrix-latex&gt;
&lt;pl-matrix-latex params-name=""b"" digits=""1""&gt;&lt;/pl-matrix-latex&gt;
+ &lt;pl-matrix-latex params-name=""c"" digits=""1""&gt;&lt;/pl-matrix-latex&gt;$</code>
</pre>

",pl-matrix-latex,"[{'question_html': '\n<pl-question-panel>\n\n<p>The element <code>pl-matrix-latex</code> can be used to display 2D numpy arrays and scalars. </p>\n\n<p>\n  Display a 2D array of floats with {{params.sf}} significant figures,  by setting\n   <code>presentation-type=""sigfig""</code> and <code>digits=""{{params.sf}}""</code>\n </p>\n\n<p>\n${\\bf A} = <pl-matrix-latex params-name=""U"" digits=""{{params.sf}}"" presentation-type=""sigfig""></pl-matrix-latex>$\n</p>\n\n\n<p>Display a 1D array <code>a = np.array({{params.M}})</code>. To use this element, we first need to wrap the\n1D array as a 2D array. For example, we use\n<code>b = a.reshape((1, M))</code> to display\nas a row-vector or <code>c = a.reshape((M, 1))</code> to display as a column vector:</p>\n\n<p>\n${\\bf b} =  <pl-matrix-latex params-name=""b"" digits=""{{params.sf}}"" presentation-type=""f""></pl-matrix-latex>$\n</p>\n<p>\n${\\bf c} =  <pl-matrix-latex params-name=""c"" digits=""4""></pl-matrix-latex>$\n</p>\n\n<p>\nTo display <code>b</code> we use <code>digits=""{{params.sf}}"" presentation-type=""f""</code>\n  and to display <code>c</code> we use <code>digits=""4""</code>.\n</p>\n\n<p>We can write systems of linear equations ${\\bf A}^T{\\bf x} = {\\bf c}$\nas such:\n</p>\n\n<p>\n$$ <pl-matrix-latex params-name=""U"" presentation-type=""f"" digits=""3""> </pl-matrix-latex>^T\n\\begin{bmatrix} x \\\\ y \\\\ z \\end{bmatrix}\n<pl-matrix-latex params-name=""c"" presentation-type=""f"" digits=""4""></pl-matrix-latex>$$\n</p>\n\n<p> When the element <code>pl-matrix-latex</code> is used to display a scalar,\n  it results in printing the scalar as a string, without any brackets around it.\n </p>\n\n<p>\n$x = <pl-matrix-latex params-name=""myNumber"" digits=""{{params.sf}}"" presentation-type=""sigfig""></pl-matrix-latex>$\n</p>\n\n</pl-question-panel>\n', 'server_file': 'import numpy as np\nimport prairielearn as pl\nimport scipy.linalg as sla\n\n\ndef generate(data):\n    sf = 2\n\n    # Matrix shape\n    M = 3\n\n    myNumber = 2.148233\n\n    # Generating the orthogonal matrix U\n    # (numbers rounded with 2 decimal digits)\n    X = np.random.rand(M, M)\n    Q, R = sla.qr(X)\n    U = np.around(Q, sf + 1)\n\n    b = np.random.rand(M)\n    bc = b.reshape((M, 1))\n    br = b.reshape(1, M)\n\n    data[""params""][""sf""] = sf\n    data[""params""][""M""] = M\n    data[""params""][""U""] = pl.to_json(U)\n    data[""params""][""myNumber""] = pl.to_json(myNumber)\n    data[""params""][""b""] = pl.to_json(br)\n    data[""params""][""c""] = pl.to_json(bc)\n'}, {'question_html': '<pl-question-panel>\n  <p>\n    Select the matrices below with dimensions ${{params.N}}\\times{{params.N}}$:\n  </p>\n</pl-question-panel>\n<pl-checkbox answers-name=\'students\' hide-answer-panel=""true"">\n  <pl-answer correct=""true"">\n    $<pl-matrix-latex params-name=""N1""></pl-matrix-latex>$\n  </pl-answer>\n  <pl-answer correct=""true"">\n    $<pl-matrix-latex params-name=""N2""></pl-matrix-latex>$\n  </pl-answer>\n  <pl-answer correct=""false"">\n    $<pl-matrix-latex params-name=""M1""></pl-matrix-latex>$\n  </pl-answer>\n  <pl-answer correct=""false"">\n    $<pl-matrix-latex params-name=""M2""></pl-matrix-latex>$\n  </pl-answer>\n  <pl-answer correct=""false"">\n    $<pl-matrix-latex params-name=""M3""></pl-matrix-latex>$\n  </pl-answer>\n  <pl-answer correct=""false"">\n    $<pl-matrix-latex params-name=""M4""></pl-matrix-latex>$\n  </pl-answer>\n</pl-checkbox>\n', 'server_file': 'import random\n\nimport numpy as np\nimport prairielearn as pl\n\n\ndef generate(data):\n    N = random.choice([2, 3])\n    data[""params""][""N""] = N\n    for i in range(2):\n        X = np.random.rand(N, N)\n        name = ""N"" + str(i + 1)\n        data[""params""][name] = pl.to_json(X)\n    for i in range(4):\n        M = random.choice([j for j in range(2, 5) if j not in [N]])\n        X = np.random.rand(M, M)\n        name = ""M"" + str(i + 1)\n        data[""params""][name] = pl.to_json(X)\n'}]","
description:

The `pl-matrix-latex` custom HTML tag is specifically designed to display numerical matrices or scalar values using LaTeX formatting via MathJax. It enhances the representation of mathematical content on web pages, especially in educational contexts where complex mathematical structures need to be presented clearly and correctly. This tag is particularly useful in online quizzes, assignments, or educational platforms where instructors want to visualize arrays and scalars in a mathematically rigorous manner, allowing students to better understand matrix operations or numerical results associated with questions.

use_cases:
- Displaying solutions to linear algebra problems involving matrices, where students must understand the formation and manipulation of matrix data.
- Presenting the results of a matrix operation, such as addition or multiplication, in a quiz where students must interpret the output correctly.
- Providing visualization for data science applications where matrices are often used to represent data structures and students can practice their understanding of matrix notation and operations.

example_questions:
- What is the result of the operation $$C = \begin{bmatrix} 1 & 2 \\ 3 & 4 \end{bmatrix} + \begin{bmatrix} 5 & 6 \\ 7 & 8 \end{bmatrix} ?$$
- Given the matrix $$A = <pl-matrix-latex params-name=""A"">$$ and vector $$b = <pl-matrix-latex params-name=""b"">$$, compute the product $$x = A \cdot b + \begin{bmatrix} 1 \\ 1 \end{bmatrix}$$.
- If $$B = <pl-matrix-latex params-name=""B"">$$, calculate the determinant of matrix $$B$$.
"
"Attribute | Type | Default | Description
----------------------------------------
 | string | - | Contents of the card header.
 | string | - | Contents of the card title.
 | string | - | Contents of the card subtitle.
 | string | - | Raw contents of the card body.
 | string | - | Contents of the card footer.
 | string | - | Source URL for the top image.
 | string | - | Alternative text for the top image.
 | string | - | Source URL for the bottom image.
 | string | - | Alternative text for the bottom image.
 | ""25%"", ""50%"", ""75%"", or ""auto"" | ""auto"" | Width of the card.
",{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/element/card'},"<p>Displays question content within a card-styled component. Optionally displays a header, footer, and/or image via tag attributes.</p>

<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-card
  header=""Header""
  title=""Title""
  width=""50%""
  img-bottom-src=""https://via.placeholder.com/720x480""
&gt;
  &lt;pl-question-panel&gt; This card is 50% width and has a bottom image. &lt;/pl-question-panel&gt;
&lt;/pl-card&gt;</code>
</pre>

<p>The <code>pl-card</code> attributes mirror the options of <a href=""https://getbootstrap.com/docs/4.6/components/card/"">Bootstrap 4 cards</a>.</p>

<a href=""https://getbootstrap.com/docs/4.6/components/card/"">Bootstrap 4 cards</a>.
",pl-card,"[{'question_html': '<pl-card header=""Header"" title=""Title"" subtitle=""Subtitle"" footer=""Footer"">\n  <pl-question-panel>\n    This is a full-width card with all options except for images.\n  </pl-question-panel>\n</pl-card>\n\n<pl-card header=""Header"" title=""Title"" img-bottom-src=""https://via.placeholder.com/720x480"" width=""50%"">\n  <pl-question-panel>\n    This is a 50%-width card with a header and a bottom image.\n  </pl-question-panel>\n</pl-card>\n\n<pl-card img-top-src=""https://via.placeholder.com/1920x1080"" title=""Title"" footer=""Footer"" width=""75%"">\n  <pl-question-panel>\n    This is a 75%-width card with a top image and a footer.\n  </pl-question-panel>\n</pl-card>\n', 'server_file': 'import random\n\nimport numpy as np\nimport prairielearn as pl\n\n\ndef generate(data):\n    N = random.choice([2, 3])\n    data[""params""][""N""] = N\n    for i in range(2):\n        X = np.random.rand(N, N)\n        name = ""N"" + str(i + 1)\n        data[""params""][name] = pl.to_json(X)\n    for i in range(4):\n        M = random.choice([j for j in range(2, 5) if j not in [N]])\n        X = np.random.rand(M, M)\n        name = ""M"" + str(i + 1)\n        data[""params""][name] = pl.to_json(X)\n'}]","
description:

The <pl-card> custom HTML tag is designed to effectively present content in a visually appealing card layout. It encapsulates various segments such as headers, titles, body content, images, and footers into a cohesive component that allows for better organization and user engagement. This tag is particularly useful when there is a need to distinguish different pieces of content in a structured format, such as in educational materials and online quizzes, where clarity and aesthetics enhance the learning experience. You should consider using <pl-card> whenever you wish to present questions, information, or content that benefits from a card-styled presentation, especially when visual elements like images are included to draw attention.

use_cases:
- Displaying quiz questions visually within an online assessment platform, improving the layout and readability.
- Presenting lecture questions in a classroom setting, where each question is visually distinct and easily understood by students.
- Creating a portfolio of questions and answers for a subject-specific review, where each card can represent an individual topic or question, aiding in visual learning.

example_questions:
- What are the key aspects of the water cycle?
- Explain the significance of the Pythagorean theorem in geometry.
- What are the main functions of the circulatory system in humans?
"
,{'https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/questions/demo/custom/gradeFunction'},"<p>Provide information regarding the question answer after the student is unable
to submit further answers for grading.</p>

<pre class=""highlight"">
  <code class=""language-html"">&lt;pl-answer-panel&gt;This content is only shown in the answer panel.&lt;/pl-answer-panel&gt;</code>
</pre>

<p>Generally, the contents of <code>question.html</code> will appear in
the question panel, submission panel, and answer panel. To prevent
content from being displayed in the submission panel and
question panel (so, only in the answer panel), surround that content
with the <code>&lt;pl-answer-panel&gt;</code> tags.</p>

<p>Common reasons that trigger the display of the answer panel are:</p>

<ul>
<li>The question is fully correct.</li>
<li>There are no more submission attempts.</li>
<li>The time limit for the assessment has expired.</li>
</ul>

<li>The question is fully correct.</li>

<li>There are no more submission attempts.</li>

<li>The time limit for the assessment has expired.</li>

",pl-answer-panel,,"
description:

The <pl-answer-panel> tag is used in educational contexts to display feedback or information related to a question after a student has submitted their answer and is unable to make further submissions. This is particularly useful in quizzes or assessments where students may need clarification on their answers, especially after the grading criteria have been met. The <pl-answer-panel> ensures that specific content is only shown in the answer panel, preventing it from appearing prematurely in the question or submission panels. It enhances the learning experience by providing immediate feedback and context about the student's performance once they can no longer change their answers.

use_cases:
- After a student completes a timed quiz, the <pl-answer-panel> tag can be utilized to display the correct answer and an explanation, allowing students to learn from their mistakes without the option to change their answer.
- In a practice test where students are allowed multiple attempts, the <pl-answer-panel> can reveal tips or additional resources about a question after the student exhausts their attempts, ensuring they understand the concept before moving on.
- For standardized assessments that provide feedback post-examination, information related to the question's assessment criteria can be included within the <pl-answer-panel> to guide students on what was expected for a correct response.

example_questions:
- What is the capital of France, and why is it considered a significant city in Europe?
- Explain the process of photosynthesis and its importance to plant life.
- Describe the impact of the Industrial Revolution on society, providing at least two specific examples.
"
